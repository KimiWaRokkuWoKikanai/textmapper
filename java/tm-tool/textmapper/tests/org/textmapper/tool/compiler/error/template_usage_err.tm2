language template_vars_err(null);

:: lexer

identifier {String}: /[a-zA-Z_]+/

'=':        /=/
':':        /:/
',':        /,/
'(':        /\(/
')':        /\)/

:: parser

input :
# ERR: @Elem: Template parameter is unset.
	  Elem
	  (identifier '=' object)+
# ERR: @<')'>: Only nonterminals and template parameters can be templated.
	'('<')'>
# ERR: @key_value: key_value cannot be resolved
	key_value<key_value>
	A<+Bool>
# ERR: @+Bool: Bool is not used in key_value
	key_value<+Bool>
# ERR: @+Elem: type error: symbol is expected
	key_value<+Elem>
# ERR: @~Elem: type error: symbol is expected
	key_value<~Elem>
	A<~Bool>
;

object :
# ERR: @list: Required parameters are not provided: Elem
	  identifier ('(' list ')')?
;

key_value :
	  identifier ':' object
;

%global param Elem;

list<Elem> :
# ERR: @Elem: Template parameter is unset.
	  Elem
# ERR: @Elem: Template parameter is unset.
	| list<Elem> ',' Elem
;

%global flag Bool;

A :
	  identifier
	| [Bool] '(' ')'
;