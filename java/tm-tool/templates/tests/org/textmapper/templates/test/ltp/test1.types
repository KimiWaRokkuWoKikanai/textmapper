class Parser {}

class Context {
	Parser parser[1];
}

class Grammar {
	Symbol symbols[1..*];
}

class Symbol {
	int index;
	string id;
	string name[1; 1..*];
	string wrong[1, 1..*];
	string type;
	bool term[identifier];
}

class Q extends Symbol {
}

class Defaults {
	Symbol q = Symbol(a => "aaaa");
	Symbol q2 = Symbol(name : 1);
	Grammar q3 = Grammar(symbols => 1);
	Context q4[1] = Context(parser=[]);

	Grammar q3 = Grammar(symbols : []);
	Context q4[1] = Context(parser => Parser ());

	Symbol yo = Parser1();  # no class
	Symbol yo = Parser();  # bad
	Symbol yo = Q();
	Symbol yo = Symbol();
}