<!--
  ~ Copyright 2010-2017 Evgeny Gryaznov
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see http://www.gnu.org/licenses/.
  -->
<idea-plugin url="https://plugins.jetbrains.com/plugin/7291-textmapper">
	<id>org.textmapper.idea</id>
	<name>Textmapper</name>
	<category>Custom Languages</category>
	<version>0.9.30</version>
	<vendor url="http://textmapper.org/" email="egryaznov@gmail.com">Evgeny Gryaznov</vendor>

	<depends>com.intellij.modules.lang</depends>
	<depends>com.intellij.modules.platform</depends>
	<depends optional="true" config-file="tm-java.xml">com.intellij.modules.java</depends>
	<depends optional="true" config-file="tm-watcher.xml">com.intellij.plugins.watcher</depends>

	<!-- 12.1.4 -->
	<idea-version since-build="129.713"/>

	<description><![CDATA[
	<html>
		<h3>Textmapper support</h3>
		<br>
		<b>Features:</b><br>
		<ul>
		<li>Customizable syntax highlighting</li>
		<li>Navigation (go to declaration)</li>
		<li>Find usages, Rename, File structure</li>
		<li>On-the-fly validation, compiler</li>
		</ul>
	</html>
	]]></description>

	<application-components>
		<component>
			<implementation-class>org.textmapper.idea.TMLoader</implementation-class>
		</component>
	</application-components>

	<actions>
		<action id="org.textmapper.idea.actions.CreateTextmapperFileAction"
				class="org.textmapper.idea.actions.CreateTextmapperFileAction"
				text="Textmapper grammar" description="Creates new Textmapper grammar">
			<add-to-group group-id="NewGroup" anchor="last"/>
		</action>
	</actions>

	<extensionPoints>
		<extensionPoint name="templatesHandler" interface="org.textmapper.idea.actions.TemplatesHandler"/>
	</extensionPoints>

	<extensions defaultExtensionNs="com.intellij">
		<facetType implementation="org.textmapper.idea.facet.TmFacetType"/>
		<framework.detector implementation="org.textmapper.idea.facet.TmFacetType$TmFacetDetector"/>
		<frameworkSupport implementation="org.textmapper.idea.facet.TmFacetTypeFrameworkSupportProvider"/>
		<projectService serviceImplementation="org.textmapper.idea.facet.TmProjectSettings"/>
		<projectConfigurable groupId="language" groupWeight="45" displayName="Textmapper"
							 provider="org.textmapper.idea.facet.TmSettingsConfigurableProvider"/>
		<fileTypeFactory implementation="org.textmapper.idea.TMFileTypesFactory"/>
		<fileTemplateGroup implementation="org.textmapper.idea.actions.TMTemplatesFactory"/>

		<syntaxHighlighter
				key="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.TMSyntaxHighlighter"/>
		<lang.parserDefinition
				language="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.parser.TMParserDefinition"/>
		<lang.foldingBuilder
				language="Textmapper"
				implementationClass="org.textmapper.idea.editor.TMFoldingBuilder"/>
		<lang.psiStructureViewFactory
				language="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.structureView.TMStructureViewFactory"/>
		<lang.findUsagesProvider
				language="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.findUsages.TMFindUsagesProvider"/>
		<lang.namesValidator
				language="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.refactoring.TMNamesValidator"/>
		<lang.formatter
				language="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.formatter.TMFormattingModelBuilder"/>
		<lang.ast.factory
				language="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.lexer.TmASTFactory"/>
		<referencesSearch
				implementation="org.textmapper.idea.lang.syntax.findUsages.TMOptReferencesSearcher"/>
		<itemPresentationProvider forClass="org.textmapper.idea.lang.syntax.psi.TmLexerState"
								  implementationClass="org.textmapper.idea.lang.syntax.presentation.LexerStatePresentationProvider"/>
		<extendWordSelectionHandler
				implementation="org.textmapper.idea.lang.syntax.editor.RuleListSelectionHandlerBase"/>
		<findUsagesHandlerFactory
				implementation="org.textmapper.idea.lang.syntax.findUsages.TMFindUsagesHandlerFactory"/>
		<typedHandler
				implementation="org.textmapper.idea.lang.syntax.editor.TmTypedHandler"/>
		<enterHandlerDelegate
				implementation="org.textmapper.idea.lang.syntax.editor.EnterAfterUnmatchedNonTermStartHandler"/>
		<renamePsiElementProcessor
				implementation="org.textmapper.idea.lang.syntax.refactoring.RenameTMLexerStateProcessor"/>
		<colorSettingsPage implementation="org.textmapper.idea.lang.syntax.TMColorsPage"/>
		<annotator
				language="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.TMAnnotator"/>
		<externalAnnotator
				language="Textmapper"
				implementationClass="org.textmapper.idea.lang.syntax.compiler.TMExternalAnnotator"/>
		<defaultLiveTemplatesProvider
				implementation="org.textmapper.idea.templates.TMDefaultLiveTemplatesProvider"/>
		<lang.commenter
				language="Textmapper"
				implementationClass="org.textmapper.idea.editor.TMCommenter"/>
		<!-- Textmapper templates -->
		<syntaxHighlighter
				key="Textmapper Templates"
				factoryClass="org.textmapper.idea.lang.templates.LtplSyntaxHighlighterProvider"/>
		<lang.parserDefinition
				language="Textmapper Templates"
				implementationClass="org.textmapper.idea.lang.templates.parser.LtplParserDefinition"/>
	</extensions>
</idea-plugin>
