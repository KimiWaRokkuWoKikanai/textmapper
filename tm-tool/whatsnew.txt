0.9.30
------

[+] New lexer parameter 'tokenColumn' generates a Lexer.Column method. 

0.9.28
------

[+] New option: nonBacktracking = false

0.9.27
------

[!] Properly support extraTypes as first-class AST elements.

0.9.26
------

[!] Report various tokens during error recovery.

0.9.25
------

[!] Optimize LR(0) states

0.9.24
------

[+] l.rewind()
[+] debugParser = true

0.9.22
------

[!] Template fixes for simple grammars.
[!] Generate AST classes for event based parsers.

0.9.21
------

[+] Support context cancellation in lookaheads.
[!] Add memoization to speed up recursive lookaheads.

0.9.20
------

[+] Syntax for casting specific events to interfaces.
[+] -> __ignoreContent

0.9.19
------

[+] Stop error recovery at recoveryScope markers

0.9.18
------

[+] Generate cancellable parsers in Go.
[+] Faster and customizable error recovering.

0.9.17
------

[+] Speed-up all parsers by consuming less heap memory.

0.9.16
------

[+] Recursive lookaheads.

0.9.15
------

[!] Fix a bug in the gotoState function.

0.9.14
------

[+] Better error recovery
[!] Various runtime performance optimizations and minor fixes.

0.9.13
------

[+] Support late reporting: a : (prefix -> Prefix) suffix -> A ;

0.9.12
------

[+] Parsers return a custom syntax error instead of false.

0.9.11
------

[+] Backtracking lexers
[+] New syntax for types

0.9.10
------

[+] Automatic import management in Go templates. "fmt".Sprintf -> fmt.Sprintf + an import.

0.9.9
-----

[+] Generate wrapper AST classes (eventFields = true).
[+] @void, @lookahead

0.9.8
-----

[+] Reporting whitespace and non-whitespace tokens as events.

0.9.7
-----

Broken release.

0.9.6
-----

[!] Go templates
[+] grammar lookaheads

0.9.5
-----

[+] grammar templates
[+] item markers
[+] Go support
[+] event based parsers (Go only)
[+] Unicode 8.0.0

0.9.4
-----

[+] /{eoi}/ lexer rules
[!] allow \0 characters in regular expressions and input streams
[!] templates cleanup: using $$ in lexer actions
[+] Unicode 7.0.0

IDEA plugin:

[+] Non-java IDEs support (WebStorm, etc.).

0.9.3
-----
[+] JS templates
[+] Symbol sets support: set(first input), etc.

IDEA plugin:

[!] Multiple fixes. Works on Windows.

0.9.2
------

[+] ability to derive an AST from the grammar

IDEA plugin:

[+] better highlighting
[+] check the grammar on the fly

0.9.1
------

[+] Negative Lookahead syntax: noPlusExpr ::= (?! '+') expression ;
[+] \p{category} in lexer patterns
[+] better syntax for space lexemes: _skipNL: /[\n\r]+/ (space)
[+] syntax files without a parser (just lexer)
[!] fixed types in AST tree generation
[!] code which skips semantic action was extracted into a separate "Action" parser: saction.s
[+] soft keywords in lapg.s grammar: (soft/class/space), layout symbols (do not affect parsing)
[+] new api: AbstractProcessingStatus
[+] extracted org.textmapper.lapg.core module (lalr(1) and lexer cores) with GrammarFacade as entry point
[!] fully migrated to JUnit4
[+] improved regex parser: support set operations, modifiers and eoi matching
[+] generate GenericLexer/Parser from templates
[!] java: effective storage of huge parser/lexer tables in strings

IDEA plugin:

[+] Colors settings page for .s files
[+] Highlighting for lexer regular expressions and semantic actions
[+] Highlighting for .ltp files

1.3.10  (July 14, 2011)
------

[+] first public release of Java version
