// generated by Textmapper; DO NOT EDIT

package tm

import (
	"fmt"

	"github.com/inspirer/textmapper/parsers/tm/token"
)

var recoveryScopeStates = map[int]bool{
	108: true,
	188: true,
	221: true,
	222: true,
	279: true,
	483: true,
}

var tmNonterminals = [...]string{
	"identifier",
	"identifier_Keywords",
	"identifier_Str",
	"integer_literal",
	"string_literal",
	"boolean_literal",
	"literal",
	"pattern",
	"command",
	"syntax_problem",
	"file",
	"import__optlist",
	"option_optlist",
	"header",
	"lexer_section",
	"parser_section",
	"import_",
	"option",
	"symref",
	"symref_Args",
	"rawType",
	"lexer_parts",
	"lexer_part",
	"lexer_part_OrSyntaxError",
	"named_pattern",
	"start_conditions_scope",
	"start_conditions",
	"stateref_list_Comma_separated",
	"lexeme",
	"lexeme_id",
	"lexeme_attrs",
	"lexeme_attribute",
	"lexer_directive",
	"lexer_state_list_Comma_separated",
	"stateref",
	"lexer_state",
	"grammar_parts",
	"grammar_part",
	"grammar_part_OrSyntaxError",
	"nonterm",
	"nonterm_alias",
	"assoc",
	"param_modifier",
	"template_param",
	"directive",
	"identifier_list_Comma_separated",
	"inputref_list_Comma_separated",
	"inputref",
	"references",
	"rules",
	"rule0",
	"predicate",
	"rhsSuffix",
	"reportClause",
	"reportAs",
	"rhsEmpty",
	"rhsParts",
	"rhsPart",
	"rhsPart_OrSyntaxError",
	"lookahead_predicate_list_And_separated",
	"rhsLookahead",
	"lookahead_predicate",
	"rhsStateMarker",
	"rhsAssignment",
	"rhsOptional",
	"rhsCast",
	"rhsAlias",
	"listSeparator",
	"rhsPrimary",
	"rhsSet",
	"setPrimary",
	"setExpression",
	"nonterm_param_list_Comma_separated",
	"nonterm_params",
	"nonterm_param",
	"param_ref",
	"args",
	"argument_list_Comma_separated",
	"argument_list_Comma_separatedopt",
	"argument",
	"param_type",
	"param_value",
	"predicate_primary",
	"predicate_expression",
	"expression",
	"expression_list_Comma_separated",
	"rawTypeopt",
}

func symbolName(sym int32) string {
	if sym == noToken {
		return "<no-token>"
	}
	if sym < int32(token.NumTokens) {
		return token.Type(sym).String()
	}
	if i := int(sym) - int(token.NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmDefGoto = []int32{
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
}

var tmGoto = []int32{
	1199, 118, -83, -84, 7, 995, 1074, -164, 403, 4825, 770, 769, 696, 771, 203,
	258, 697, 678, -103, 1314, 94, 298, 299, -156, -133, -54, 55, 387, 69, -390,
	-405, 207, 84, 188, 185, -192, 504, 505, 386, 313, 303, 389, 390, 193, 369,
	172, 300, 115, 311, 8414, 8258, 8381, 5876, 263, 450, 7964, 8000, 8135, 276,
	685, 7169, 560, 7292, 7415, 6004, 6135, 6266, 578, 6397, 5019, 89, 120, 710,
	603, 455, 5955, 523, 576, 582, 432, -340, -147, 216, 242, -88, 393, -241,
}

var tmDefAct = []int32{
	-1, -1, -1, 126, 0, 10, 1, 23, 11, 21, 22, 14, -1, 17, 9, 13, 27, -1, 5, 24,
	30, 29, 28, 6, 31, 15, 18, 8, 12, 16, 32, 3, 7, 19, 4, 25, 20, -1, 33, 69,
	67, 70, 68, 71, 66, 43, 34, 56, 44, 54, 55, 47, 59, 50, 42, 46, 60, 35, 38,
	57, 63, 62, 61, 39, 64, 48, 51, 41, 45, 49, 65, 36, 40, 52, 37, 58, 53, -1,
	-1, 26, 2, -1, -1, -1, -1, -1, -1, 139, -1, -1, -1, -1, 130, -1, -1, -1, 125,
	-1, -1, -1, -1, -1, -1, -1, 74, -1, -1, -1, -1, -1, -1, 116, 72, 73, -1, 84,
	75, 97, 85, 95, 96, 88, 100, 91, 83, 87, 101, 76, 79, 98, 104, 103, 102, 80,
	105, 89, 92, 82, 86, 90, 106, 77, 81, 93, 78, 99, 94, 115, 138, 310, 297,
	334, -1, 271, -1, -1, 295, -1, -1, 307, 312, 311, 309, 324, 327, 329, 331,
	341, -1, -1, -1, -1, 351, 353, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	108, -1, -1, -1, -1, -1, -1, 123, 127, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 306, -1, -1, 323, -1, 356, -1, 374, -1, -1, -1, -1, 136, 322, -1,
	319, -1, -1, -1, -1, -1, 137, -1, 232, -1, 283, -1, -1, 293, -1, -1, 291,
	314, 317, -1, 287, 308, 316, 315, 313, 328, -1, -1, 339, 338, 245, -1, -1,
	303, -1, -1, 352, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 134, -1, -1, -1, -1, 119, -1, 121, 236, -1, -1, -1, 244, -1, -1, -1, -1,
	-1, -1, -1, 299, 300, 371, -1, -1, -1, 298, -1, 335, -1, -1, 321, 320, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 138,
	344, 347, -1, 325, -1, -1, -1, -1, -1, 359, 326, 272, 281, -1, 279, -1, 275,
	289, 285, 330, -1, 264, -1, 305, -1, 350, 230, -1, 228, -1, -1, -1, 231, 224,
	-1, -1, -1, -1, -1, -1, -1, 129, 133, -1, -1, -1, -1, -1, 140, 142, 145, -1,
	143, 144, -1, -1, 208, 210, 211, 212, 107, -1, 110, 109, 112, 111, 113, 377,
	382, 135, 117, 234, -1, 235, 242, -1, 243, 240, -1, -1, -1, 372, 373, -1, -1,
	269, -1, -1, 318, 340, -1, 346, 343, -1, 342, -1, 364, 365, -1, -1, 357, 277,
	273, 332, -1, 301, 368, 369, 354, 229, 226, -1, 227, 222, -1, 220, -1, -1,
	-1, 223, -1, -1, -1, -1, 206, -1, 156, -1, -1, 385, -1, -1, 150, 141, 146,
	149, 147, 148, -1, -1, -1, -1, -1, 366, -1, -1, -1, -1, 246, 249, 248, 367,
	247, -1, -1, -1, 216, 209, 213, 214, 215, -1, 381, 384, -1, 233, 241, 238,
	-1, 239, 270, 337, 336, 345, -1, -1, 362, 358, 263, 225, 221, 218, -1, 219,
	-1, 207, -1, 205, -1, 153, -1, 154, 114, 151, -1, -1, 196, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 266, -1, -1, -1, -1, 380, -1, 379, 237, 217, -1,
	202, -1, 203, 155, 197, 186, -1, 194, 195, 152, -1, 176, -1, -1, 260, 261,
	-1, -1, 267, 255, -1, 256, 254, -1, -1, 253, 378, 383, 201, 204, 184, 185,
	199, 200, -1, 190, 193, -1, 166, 174, 175, 257, 258, -1, 262, 265, -1, 251,
	-1, 180, 183, -1, 198, 189, -1, 191, 164, 165, 170, 173, -1, 259, -1, 252,
	179, -1, 181, 187, 160, 163, -1, 169, -1, 171, 250, 177, 159, -1, 161, 167,
	157, -1, -1, -1, -1,
}

const tmActionBase = -83

var tmAction = []int32{
	42, 7708, 5269, -83, -83, -83, -83, -83, -83, -83, -83, -83, 5433, -83, -83,
	-83, -83, 5517, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -15, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -2, 5679, -83, -83, 51, 128, 782, 5269, 7930, 7930, -83, -13, 99,
	160, 150, -83, 5269, 7668, 6642, -83, 782, 82, 268, 782, 183, 307, 66, -83,
	5, 7930, 7229, 862, 6733, 105, -83, -83, -83, 316, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, 8268, -83,
	-83, -83, 280, -83, 1266, -8, -83, 206, 1026, -83, -83, -83, -83, -83, 1348,
	7803, 8011, -83, 204, 119, 7079, 138, -83, -83, 782, 394, 782, 407, 634, 782,
	782, 451, 210, 639, 500, -83, 656, 644, 322, 648, 58, 327, -83, -83, 497,
	782, 649, 782, 503, 782, 654, 782, 782, 499, 657, -83, 7119, 7119, -83, 7930,
	-83, 95, -83, 67, 186, 1106, 7119, -83, -83, 446, -83, 862, 5758, 5598, 5936,
	5598, -83, 681, -83, 297, -83, 309, 1186, -83, -66, 357, -83, -83, -83, 368,
	-83, -83, -83, -83, -83, -83, 7119, 5269, -83, -83, -83, 7930, 7930, -83,
	178, 7930, -83, 522, 782, 524, 782, 658, 782, 533, 534, 782, 660, 782, 536,
	661, 782, 647, 651, -83, 5837, 7837, 291, 506, -83, 606, -83, -83, 541, 782,
	553, -83, 555, 782, 561, 565, 782, 663, 782, -83, -83, -83, 366, 366, 7229,
	-83, 7229, -83, 7119, 650, -83, -83, 6733, 346, 5758, 5758, 1651, 1765, 1845,
	1925, 2005, 2085, 2165, 2245, 2325, 2405, 2485, 2565, 2645, 2725, 2805, 2885,
	2965, 3045, 3125, 3205, 3285, 3365, 3445, 3525, 3605, 3685, 3765, 3845, 3925,
	4005, 4085, 4165, 4245, 7119, 8710, -83, -83, 111, -83, 7930, 7930, 154, 466,
	655, -83, -83, -83, -83, 409, -83, 412, -83, -83, -83, -83, 664, -83, 143,
	-83, 5878, -83, -83, 571, -83, 574, 782, 575, -83, -83, 577, 782, 584, 782,
	670, 782, 586, -83, -83, 324, 7890, 680, 266, 5080, -83, -83, -83, 6776, -83,
	-83, 19, 6857, -83, -83, -83, -83, -83, 108, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, 593, -83, -83, 597, -83, -83, 599, 782, 600, -83, -83,
	462, 485, -83, 6936, 14, -83, -83, 208, -83, -83, 5758, -83, 5758, -83, -83,
	5878, 7171, -83, -83, -83, -83, 7930, -83, -83, -83, -83, -83, -83, 610, -83,
	-83, 612, -83, 618, 782, 619, -83, 7119, 7930, 7930, 667, -83, 472, -83, 616,
	5269, -83, 398, 683, -83, -83, -83, -83, -83, -83, 5837, 266, 379, 703, 703,
	-83, 7930, 7119, 7119, 7930, -83, -83, -83, -83, -83, 7119, 559, 7930, -83,
	-83, -83, -83, -83, 687, -83, -83, 622, -83, -83, -83, 621, -83, -83, -83,
	-83, -83, 365, 443, -83, -83, -83, -83, -83, -83, 631, -83, 7119, -83, 159,
	-83, 440, -83, 7930, -83, -83, -83, 684, 691, 17, 5355, 398, 693, 665, 665,
	699, 700, 704, 695, 439, 530, -83, 547, 7015, 7930, 636, -83, 286, -83, -83,
	-83, 709, -83, 7930, -83, -83, -83, 17, 598, 234, -83, -83, 701, 17, 711,
	712, -83, -83, 665, 714, -83, -83, 7119, -83, -83, 638, 5878, -83, -83, -83,
	-83, -83, 234, -83, -83, -83, 739, 948, -83, 4327, 17, 234, -83, -83, -83,
	749, -83, -83, 5878, -83, 750, 948, -83, 4409, -83, -83, 4491, -83, 234, -83,
	948, -83, 4573, -83, 751, -83, -83, 4655, -83, -83, 948, -83, 4737, -83,
	4819, -83, -83, -83, -83, 4901, -83, -83, -83, 767, 768, -83, -83,
}

const tmTableLen = 8877

var tmTable = []int16{
	148, 475, 294, -85, -86, -176, 218, 294, -87, -208, -87, -88, -209, -94, 148,
	-87, 294, 148, -1, -95, -1, -1, -1, -1, -1, 148, 217, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -572, -1, -1, -1, -518, -519, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -207, 120, 500, -1, -1, -1, -1, -1, -1, -89, -190,
	-487, -99, -86, 148, -488, -489, -87, 148, -490, -491, -300, -492, -208,
	-493, -494, -209, -204, -86, -495, -301, -496, -87, -497, 148, -498, 148,
	543, -499, 148, 148, -1, -539, -197, 187, -302, 293, 294, -87, 370, -4, -298,
	-299, -187, -407, 148, 304, 148, 370, 148, -178, 148, 148, 77, -440, -87,
	217, 217, -508, -223, -408, -509, 304, 370, 88, 148, 217, 304, -441, 572,
	304, 148, 344, 344, 394, 344, 304, 148, -442, -102, -86, -113, 148, 476, -87,
	-409, 302, -88, -257, -410, -253, 302, 556, -451, 302, -254, 344, 595, -258,
	601, 302, -182, -86, 604, 363, -445, -87, -566, 148, -567, 148, -181, 148,
	-89, 363, 148, 177, 148, 181, -254, 148, 414, 615, -371, 391, 409, 272, 618,
	355, -229, 621, 624, 430, 148, -201, 168, 218, 148, 355, -87, 148, 629, 148,
	-303, 184, 409, 409, -236, 634, 292, 636, -440, 217, 395, 292, 453, 217,
	-252, 344, 344, 641, -269, -87, 292, -89, -520, -87, 540, -1, 478, -407, -1,
	-1, -1, -1, -442, 544, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -572, -1,
	-1, -1, 479, 344, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 532,
	532, 268, -1, -1, -1, -1, -1, -1, 410, 386, 409, -199, -475, -187, -407,
	-229, -89, 148, -187, -407, -230, 521, 148, 191, 148, 90, 148, 574, 410, 410,
	-408, -592, 282, 538, 391, -408, 346, 282, 484, 646, -149, -1, -236, 508,
	280, -87, 282, 409, 212, 280, -203, -113, 122, 515, 396, -409, -113, -87,
	280, -410, -409, -281, -224, 480, -410, 89, 148, 347, 397, 99, 102, 156, -89,
	217, 213, 394, 175, 178, 192, 183, 344, -229, 344, 398, 409, 156, 196, 529,
	156, 200, 365, 204, 290, -187, -407, -436, 156, 290, 593, -467, 348, 410,
	571, 286, 148, -87, 290, 217, 286, 98, 101, 478, 550, 551, 348, -276, -87,
	286, 277, 182, 430, -277, 346, 436, -442, 391, -468, 547, 548, -469, 594,
	203, 217, 217, 479, -409, 603, -260, 410, -410, 217, 386, 230, 233, 278, 236,
	240, 274, 367, 278, -262, 563, 274, 435, 395, -87, -547, -87, 278, 241, -87,
	274, 156, 620, 156, 261, 612, 156, 156, 266, 269, 217, 396, 278, 280, 410,
	-548, 515, 349, 268, -568, 268, -567, 156, 391, 156, 481, 156, 626, 156, 156,
	291, 349, 403, -267, -307, 591, 217, 376, -87, 409, 482, 349, 240, -89, -308,
	551, 376, -446, 156, 474, 149, 599, 480, -537, 156, 241, 357, 360, 359, 361,
	375, -302, 362, -538, 149, 217, 363, 149, 409, 375, 118, -229, 241, -584,
	613, 149, -283, -229, 212, -281, 212, -292, -287, 622, 375, 156, -87, 156,
	-273, 156, 409, 346, 156, 346, 156, 383, -229, 156, -229, 415, 632, -373,
	396, -375, 428, 172, 429, -229, -229, -585, 156, -586, -379, -380, 156, -229,
	397, 156, -384, 156, -418, 149, 519, -87, 520, 237, -587, -229, -451, -229,
	410, 398, -420, 474, -421, -229, 392, 393, 471, -229, -423, 149, 474, 149,
	-424, -229, 149, 149, -229, -229, -456, -229, 402, -457, -459, 539, -460,
	504, -229, 410, -229, 396, 149, -462, 149, -466, 149, -229, 149, 149, 553,
	-229, -512, -229, -229, 481, -513, 431, -514, -516, -490, 410, 237, 253,
	-229, 446, -229, 447, 149, -526, 482, -527, -229, -229, 149, -229, -498,
	-528, -530, 237, -563, 474, 156, -561, 91, -229, -562, 156, 404, 156, -564,
	156, -590, -598, -612, -591, -264, -613, 531, 533, 354, -272, -187, -275,
	-278, 149, -388, 149, 554, 149, -389, -285, 149, 220, 149, 226, -289, 149,
	-434, -294, -377, -599, -382, -386, -277, -426, -447, -106, -450, 103, 149,
	156, -464, -107, 149, 296, -474, 149, -536, 149, 296, -108, -539, 609, -109,
	-543, -110, -111, -87, 296, -407, -560, -570, -571, 370, -577, -116, 503,
	-580, -581, -582, -112, -87, -604, 567, -113, -114, -115, -594, 156, -607,
	-608, -116, -610, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126,
	-127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139,
	-140, -141, -142, -143, -144, -145, -146, -147, -148, -149, -618, -627, -629,
	-640, -649, -650, 505, 645, 3, 78, 193, 95, 96, 470, 598, 149, 400, 401, 542,
	393, 149, -106, 149, 502, 149, 498, 499, -107, 552, 296, 303, 219, 0, 171,
	296, -108, 509, 352, -109, 0, -110, -111, -87, 353, 0, 0, 555, 0, 0, 0, 581,
	0, 0, 0, 450, -112, 0, 0, 0, -113, -114, -115, 0, 0, 149, 0, -116, 0, -117,
	-118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142, -143,
	-144, -145, -146, -147, -148, -149, -106, 149, 433, 226, 0, 0, -107, 0, 296,
	0, 0, 0, 522, 0, -108, 0, 0, -109, 0, -110, -111, -87, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -112, 0, 0, 0, -113, -114, -115, 0, 0, 0, 0, -116, 0, -117,
	-118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142, -143,
	-144, -145, -146, -147, -148, -149, 0, 0, 0, 0, 0, -1, 0, -1, -1, -1, -1, -1,
	0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -572, -1, -1, -1, 0, 600,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, 0, -1, -1, -1, -1,
	-1, -1, 614, 0, 0, 0, 0, 617, 0, 619, 0, 623, 0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	0, 630, 0, 0, 631, 0, 633, 0, 635, 0, 637, -106, -149, -1, 0, 639, 0, -236,
	640, 288, 642, 0, 643, 0, 288, -108, 0, 644, 0, 0, -110, -111, -87, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, -113, -114, -115, 0, 0, 0, 0,
	-116, 0, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127,
	-128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140,
	-141, -142, -143, -144, -145, -146, -147, -148, -149, -106, 0, 0, 0, 0, 0,
	-236, 0, 288, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0, -110, -111, -87, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, -113, -114, -115, 0, 0, 0, -304, -116,
	0, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128,
	-129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141,
	-142, -143, -144, -145, -146, -147, -148, -149, -106, 0, 0, 0, 0, 0, -236, 0,
	276, 0, 0, 0, 37, 276, -108, 0, 0, 0, 0, -110, -111, -87, 276, 81, 0, 0, 0,
	0, 82, 0, 0, 0, 0, 0, -112, 0, 0, 0, -113, -114, -115, 0, 0, 0, 0, -116, 0,
	-117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
	-130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
	-143, -144, -145, -146, -147, -148, -149, -106, 0, 0, 411, 0, 0, -107, 0,
	284, 0, 0, 0, 0, 284, -108, 0, 169, 170, 0, -110, -111, -87, 284, 411, 411,
	186, 189, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 208, 210, -114, -115, 0, 0, 0, 0,
	-116, 0, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127,
	-128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140,
	-141, -142, -143, -144, -145, -146, -147, -148, -149, -1, -1, 412, -1, -1,
	-1, -1, -1, 0, -1, 0, -1, -1, -1, -1, 0, 411, -1, -1, -1, -1, 254, 426, 427,
	0, -1, -1, -1, -1, -1, -1, -247, -1, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, -1,
	-1, -1, 0, 0, -1, 151, 0, 0, 0, 411, 0, 0, 0, 0, 0, 0, 210, 0, 0, 151, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 343, 151, 210, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 0, 451, 0, 0, 0, 0, 0, 0, 366, 368, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 0, 151, 390, 37, 0, 0, 0, 0, 0, 412, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 151, 0, 0, 151, 151, 0, 0, 210, 0, 210, 0, 0, 0, 0,
	0, 0, 0, 343, 343, 151, 0, 151, 0, 151, 0, 151, 151, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 151, 345, 151, 0, 151, 0, 151, 0, 0, 0, 0,
	151, 0, 210, 210, 0, 0, 0, 0, 411, 0, 0, 0, 0, 0, 364, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 151, 0, 151, 0, 151, 0, 0, 151, 0, 151, 0, 411, 151, 0, 0, 0,
	469, 0, 0, 390, 0, 0, 0, 0, 0, 151, 0, 37, 0, 151, 0, 0, 151, 411, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 345, 345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	412, 0, 0, 0, 343, 0, 343, 0, 0, 210, 210, 0, 0, 0, 0, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 0, 0, 0, 72, 451, 0, 0, 530, 530, 0, 0, 72, 0, 0, 72, 0, 0, 72, 0,
	72, 0, 0, 0, 0, 390, 0, 451, 72, 0, 0, 549, 151, 0, 366, 0, 0, 151, 0, 151,
	0, 151, 557, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 469, 0, 0, 0, 151, 0, 0, 390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 345, 0, 345, 587, 0, 0, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	10, 0, 0, 0, 0, 0, 0, 0, 84, 151, 10, 0, 0, 0, 0, 0, 84, 0, 0, 84, 210, 0,
	84, 0, 84, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 10, 10, 0, 210, 0, 0,
	0, 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 84, 1, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 1, 0, 0, 0, 0, 0, 75, 0, 0, 75, 0, 0, 75, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 75,
	23, 0, 0, 0, 0, 0, 0, 0, 97, 0, 23, 0, 0, 0, 0, 0, 97, 0, 0, 97, 0, 0, 97, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0, 0, 0, 0, 0, 23, 23, 0, 0, 0, 0, 0, 0, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 97, 11, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 11, 0, 0, 0, 0, 0, 85, 0, 0, 85, 0, 0, 85, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 11, 11, 0, 0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 85, 21, 0, 0, 0, 0, 0, 0, 0, 95, 0, 21, 0, 0, 0, 0,
	0, 95, 0, 0, 95, 0, 0, 95, 0, 95, 0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	21, 21, 0, 0, 0, 0, 0, 0, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	95, 22, 0, 0, 0, 0, 0, 0, 0, 96, 0, 22, 0, 0, 0, 0, 0, 96, 0, 0, 96, 0, 0,
	96, 0, 96, 0, 0, 0, 0, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 22, 22, 0, 0, 0, 0, 0,
	0, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 96, 14, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 14, 0, 0, 0, 0, 0, 88, 0, 0, 88, 0, 0, 88, 0, 88, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 14, 14, 0, 0, 0, 0, 0, 0, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 88, 26, 0, 0, 0, 0, 0, 0, 0, 100, 0, 26, 0,
	0, 0, 0, 0, 100, 0, 0, 100, 0, 0, 100, 0, 100, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 0, 0, 26, 26, 0, 0, 0, 0, 0, 0, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 100, 17, 0, 0, 0, 0, 0, 0, 0, 91, 0, 17, 0, 0, 0, 0, 0, 91,
	0, 0, 91, 0, 0, 91, 0, 91, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 17, 17,
	0, 0, 0, 0, 0, 0, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 91, 9, 0,
	0, 0, 0, 0, 0, 0, 83, 0, 9, 0, 0, 0, 0, 0, 83, 0, 0, 83, 0, 0, 83, 0, 83, 0,
	0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 83, 13, 0, 0, 0, 0, 0, 0, 0, 87, 0, 13, 0, 0, 0, 0, 0, 87, 0, 0, 87, 0,
	0, 87, 0, 87, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 13, 13, 0, 0, 0, 0,
	0, 0, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 87, 27, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 27, 0, 0, 0, 0, 0, 101, 0, 0, 101, 0, 0, 101, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 101, 0, 0, 0, 0, 0, 0, 27, 27, 0, 0, 0, 0, 0, 0, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 101, 2, 0, 0, 0, 0, 0, 0, 0, 76, 0,
	2, 0, 0, 0, 0, 0, 76, 0, 0, 76, 0, 0, 76, 0, 76, 0, 0, 0, 0, 0, 0, 0, 76, 0,
	0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 76, 5, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 5, 0, 0, 0, 0, 0, 79, 0, 0, 79, 0, 0, 79, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	79, 24, 0, 0, 0, 0, 0, 0, 0, 98, 0, 24, 0, 0, 0, 0, 0, 98, 0, 0, 98, 0, 0,
	98, 0, 98, 0, 0, 0, 0, 0, 0, 0, 98, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0,
	0, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 98, 30, 0, 0, 0, 0,
	0, 0, 0, 104, 0, 30, 0, 0, 0, 0, 0, 104, 0, 0, 104, 0, 0, 104, 0, 104, 0, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 30, 30, 0, 0, 0, 0, 0, 0, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 104, 29, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	29, 0, 0, 0, 0, 0, 103, 0, 0, 103, 0, 0, 103, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 29, 29, 0, 0, 0, 0, 0, 0, 29, 29, 29, 29, 29, 29, 29,
	29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
	29, 29, 29, 29, 29, 29, 103, 28, 0, 0, 0, 0, 0, 0, 0, 102, 0, 28, 0, 0, 0, 0,
	0, 102, 0, 0, 102, 0, 0, 102, 0, 102, 0, 0, 0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 28, 28, 0, 0, 0, 0, 0, 0, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 102, 6, 0, 0, 0, 0, 0, 0, 0, 80, 0, 6, 0, 0, 0, 0, 0, 80, 0, 0, 80,
	0, 0, 80, 0, 80, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0,
	0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 80, 31, 0, 0, 0, 0, 0, 0, 0, 105, 0, 31, 0, 0, 0, 0,
	0, 105, 0, 0, 105, 0, 0, 105, 0, 105, 0, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 0, 31, 31, 0, 0, 0, 0, 0, 0, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 105, 15, 0, 0, 0, 0, 0, 0, 0, 89, 0, 15, 0, 0, 0, 0, 0, 89, 0, 0, 89,
	0, 0, 89, 0, 89, 0, 0, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, 0, 15, 15, 0, 0, 0,
	0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 89, 18, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 18, 0, 0, 0, 0, 0, 92, 0, 0, 92, 0, 0, 92, 0, 92, 0, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 18, 18, 0, 0, 0, 0, 0, 0, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 92, 8, 0, 0, 0, 0, 0, 0, 0, 82, 0, 8, 0,
	0, 0, 0, 0, 82, 0, 0, 82, 0, 0, 82, 0, 82, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0,
	0, 0, 0, 8, 8, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 82, 12, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 12, 0, 0, 0, 0, 0, 86, 0, 0, 86, 0, 0, 86, 0, 86, 0, 0, 0, 0, 0, 0,
	0, 86, 0, 0, 0, 0, 0, 0, 12, 12, 0, 0, 0, 0, 0, 0, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 86, 16, 0, 0, 0, 0, 0, 0, 0, 90, 0, 16, 0, 0, 0,
	0, 0, 90, 0, 0, 90, 0, 0, 90, 0, 90, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 0, 0,
	0, 16, 16, 0, 0, 0, 0, 0, 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 90, 32, 0, 0, 0, 0, 0, 0, 0, 106, 0, 32, 0, 0, 0, 0, 0, 106, 0, 0, 106,
	0, 0, 106, 0, 106, 0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 32, 32, 0, 0,
	0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 106, 3, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 3, 0, 0, 0, 0, 0, 77, 0, 0, 77, 0, 0, 77, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 77, 7, 0, 0, 0, 0, 0, 0, 0, 81, 0, 7, 0, 0, 0, 0, 0, 81, 0, 0, 81, 0, 0,
	81, 0, 81, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 81, 19, 0, 0, 0, 0, 0, 0, 0, 93, 0, 19, 0, 0, 0, 0, 0, 93,
	0, 0, 93, 0, 0, 93, 0, 93, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, 0, 19, 19,
	0, 0, 0, 0, 0, 0, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 93, 4, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 4, 0, 0, 0, 0, 0, 78, 0, 0, 78, 0, 0, 78, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 78, 25, 0, 0, 0, 0, 0, 0, 0, 99, 0, 25, 0, 0, 0, 0, 0, 99, 0, 0, 99, 0,
	0, 99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 99, 0, 0, 0, 0, 0, 0, 25, 25, 0, 0, 0, 0,
	0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 99, 20, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 20, 0, 0, 0, 0, 0, 94, 0, 0, 94, 0, 0, 94, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 20, 20, 0, 0, 0, 0, 0, 0, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 94, 192, 0, 192, 0, 0, 0, 0, 0, 192, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 192, 192, 0, 0, 0, 0, 0, 0, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, -149, 182, 0, 182, 0,
	0, 0, 0, 0, 182, 182, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 182, 182, 0, 0, 0, 0, 0, 0, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, -149, 188, 0, 188, 0, 0, 0, 0, 0, 188, 188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 188,
	188, 0, 0, 0, 0, 0, 0, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, -149, 172, 0, 172, 0, 0, 0, 0, 0, 172, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 172, 172, 0, 0, 0, 0, 0, 0, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, -149, 178, 0, 178, 0,
	0, 0, 0, 0, 178, 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 178, 178, 0, 0, 0, 0, 0, 0, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, -149, 162, 0, 162, 0, 0, 0, 0, 0, 162, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 162,
	162, 0, 0, 0, 0, 0, 0, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, -149, 168, 0, 168, 0, 0, 0, 0, 0, 168, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 168, 168, 0, 0, 0, 0, 0, 0, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, -149, 158, 0, 158, 0,
	0, 0, 0, 150, 158, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 190, 0, 150, 0, 0, 150,
	158, 158, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 0, 0, 158, 158, 158, 0, 0, 0, 0,
	0, 0, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, -149, 238, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 150, 0, 0, 150, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	150, 0, 150, 0, 150, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 150, 0, 0, 0, 0, 0, 150, 0, 0, 0, 0, 238, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 131, 0, -106, 150, 0, 150, 0, 150, -390,
	131, 150, 0, 150, 0, 0, 150, 0, 0, 0, 0, 0, 413, 167, 0, 0, 0, -391, 0, 150,
	0, 0, 0, 150, 0, 0, 150, 167, 150, 0, 167, -113, -312, -115, 0, 0, 0, 0, 167,
	0, -313, -314, -315, -316, -317, -318, -319, -320, -321, -322, -323, -324,
	-325, -326, -327, -328, -329, -330, -331, -332, -333, -334, -335, -336, -337,
	-338, -339, -340, -341, -342, -343, -344, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 167, 0, 167,
	0, 0, 167, 167, 150, 0, 0, 0, 0, 150, 0, 150, 0, 150, 0, 0, 0, 0, 167, 0,
	167, 477, 167, 0, 167, 167, 0, 0, 0, 501, 0, 0, 0, 0, 0, 413, 0, 0, 167, 0,
	0, 0, 0, 0, 167, 0, 167, 0, 167, 0, 167, 0, 0, 150, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 167, 0, 167, 0, 167,
	0, 0, 167, 0, 167, 150, 0, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 167, 0,
	0, 0, 167, 0, 0, 167, -40, 167, -41, -42, -43, -44, -45, -46, -47, -48, -49,
	-50, -51, -52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64,
	-65, -66, -67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, 0, 0,
	0, 0, 0, 0, 0, -106, 0, 0, 0, 0, 0, -390, 0, 0, 0, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -575, -391, 0, 0, 413, 0, 0, 0, 0, 0, 0, 0, 0, 0, 167, -113,
	-312, -115, 0, 167, 0, 167, 0, 167, -313, -314, -315, -316, -317, -318, -319,
	-320, -321, -322, -323, -324, -325, -326, -327, -328, -329, -330, -331, -332,
	-333, -334, -335, -336, -337, -338, -339, -340, -341, -342, -343, -344, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0, 0, 0, 0, 26, 26, 0, 0, 0, 26, 0, 0, 26, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 167, -7, -8, -9,
	-10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 26, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0,
	0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 576, 577,
	-7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37,
	-38, 2, 607, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, 0, -114, -115,
	0, 0, 0, 0, -116, 0, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138,
	-139, -140, -141, -142, -143, -144, -145, -146, -147, -148, 128, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, -96, 0, 0, 0, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, -106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -310, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -311, 0, 0, 0, 0, 0, 0, 0, -312, -115, 0, 0, 0, 0, 0, 0, -313,
	-314, -315, -316, -317, -318, -319, -320, -321, -322, -323, -324, -325, -326,
	-327, -328, -329, -330, -331, -332, -333, -334, -335, -336, -337, -338, -339,
	-340, -341, -342, -343, -344, -106, 0, 0, 0, 0, 0, -390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -391, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-312, -115, -187, -407, 0, 0, 0, 0, -313, -314, -315, -316, -317, -318, -319,
	-320, -321, -322, -323, -324, -325, -326, -327, -328, -329, -330, -331, -332,
	-333, -334, -335, -336, -337, -338, -339, -340, -341, -342, -343, -344, 0,
	-6, 0, 0, -409, 0, 0, 0, -410, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16,
	-17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -37, -38, 155, 0, 0, 0, 361, 0, -351, 0, 0, 0, -352,
	0, 0, 0, 155, 0, 0, 155, -6, 0, 0, 0, 0, 0, 0, 155, -7, -8, -9, -10, -11,
	-12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26,
	-27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0, 235, 239, 0, 0, 0, 0, 0, 0, 173, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 155, 0, 0, 155, 155, 0, 0, 0, 0, 0, 211, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 155, 0, 155, 0, 155, 155, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 155, 0, 0, 0, 163, 0, 155, 163, 0, 0, 358, 360, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 155, 0, 155, 0, 0, 155, 0, 155, 0, 0, 155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 163, 155, 0, 0, 163, 155, 295, 0, 155, 0, 155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 351, 163, 0, 0, 163, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 163, 0, 163, 0, 163, 163, 0, 0, 0, 173, 0, 0, 0, 0, 0, 0, 0, 164, 163, 0,
	0, 0, 0, 0, 163, 0, 348, 0, 355, 0, 163, 164, 0, 0, 164, 163, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 155, 0, 211, 0, 211, 155, 0, 155, 0, 155, 0,
	163, 0, 163, 0, 163, 0, 0, 163, 0, 163, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 164, 0, 163, 0, 164, 163, 0, 163, 0, 0, 0, 155, 0, 0, 0,
	441, 442, 0, 0, 0, 164, 0, 164, 0, 0, 164, 164, 0, 0, 0, 0, 0, 0, 0, 0, 452,
	0, 0, 0, 0, 0, 164, 0, 164, 0, 164, 0, 164, 164, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 164, 0, 0, 0, 0, 0, 164, 0, 164, 0, 164, 0, 164, 165, 0, 0, 165,
	164, 0, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0, 163, 0, 0, 0, 0, 163, 0, 163, 0, 163,
	0, 0, 0, 0, 164, 0, 164, 0, 164, 452, 351, 164, 0, 164, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 165, 0, 164, 0, 165, 164, 0, 164, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 165, 0, 0, 165, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 165, 0, 165, 163, 165, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 165, 0, 0, 0, 0, 0, 165, 0, 165, 0, 165, 0, 165, 166, 0,
	0, 166, 165, 0, 0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 164, 0, 0, 0, 0, 164, 0, 164,
	0, 164, 0, 0, 0, 0, 165, 0, 165, 0, 165, 0, 0, 165, 0, 165, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 452, 0, 0, 0, 0, 0, 165, 0, 166, 0, 165, 0, 166, 165, 0, 165,
	164, 0, 0, 0, 0, 0, 452, 0, 0, 0, 0, 0, 166, 0, 166, 0, 0, 166, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 166, 0, 166, 0, 166, 164, 166, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 0, 166, 0, 166, 0, 166, 0, 166,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 124, 0, 0, 0, 165, 0,
	165, 0, 165, -190, 0, 0, 0, 166, 0, 166, 0, 166, 0, 0, 166, 0, 166, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 166, 0, -113, -6, 166, 0, 0, 166, 0,
	166, 165, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20,
	-21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,
	-36, -37, -38, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0, 0, 0, -106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -218, 0,
	0, 0, 0, 0, 0, 166, 0, -114, -115, 0, 166, -106, 166, 0, 166, -117, -118,
	-119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129, -130, -131,
	-132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142, -143, -144,
	-145, -146, -147, -148, 0, -485, 0, -114, -115, 0, 0, 166, 0, 0, 0, -117,
	-118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129, -130,
	-131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142, -143,
	-144, -145, -146, -147, -148, 132, 0, 166, 0, 0, 0, 0, 0, -401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -113, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 333, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -114, -115, 0, 0, 0, 0, 0, 0, -117, -118, -119, -120, -121, -122,
	-123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135,
	-136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148,
	-106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -588, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -114, -115, 0, 0, 0, 0, 0, 0,
	-117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
	-130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
	-143, -144, -145, -146, -147, -148, 356, 0, 0, 0, 0, 0, 0, 0, 0, 0, 356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, -106, 0, 0, 0, 0, 0, 0, -7, -8, -9,
	-10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -114,
	-115, 0, 0, 0, 0, 0, 0, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138,
	-139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -351, 0, 0, 0,
	-352, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11,
	-12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26,
	-27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 160, 0, 0, 0, 0,
	0, 0, 0, 0, -211, 0, 0, 0, 0, 160, 0, 0, 160, -6, 0, 0, 0, 0, 0, 0, 160, -7,
	-8, -9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 160, 0, 0, 160, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 160, 0, 160, 0, 160, 160, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 161, 160, 0, 161, 0, 0, 0, 160, 0, 0, 0, 161,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 160, 0, 160, 0, 0, 160, 0, 160, 0, 0, 160, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 243, 0, 160, 0, 0, 0, 160, 0, 0, 160, 0, 160, 0, 0, 0, 0, 161, 0,
	161, 0, 0, 161, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 161,
	0, 161, 0, 161, 161, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	162, 161, 0, 162, 0, 0, 0, 161, 0, 0, 0, 162, 243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 0, 0, 0, 160, 161, 160, 161, 160, 161,
	0, 0, 161, 0, 161, 0, 0, 161, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 244, 0, 161, 0,
	0, 0, 161, 0, 0, 161, 0, 161, 0, 0, 0, 0, 162, 0, 162, 0, 160, 162, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 162, 0, 162, 0, 162, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 160, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	162, 0, 0, 0, 0, 244, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 0, -187, 0, 161, 162, 161, 162, 161, 162, 0, 0, 162, 0, 162, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 162, 0, 0, 162, 0,
	162, 0, -6, 0, 0, 0, 0, 0, 0, 161, -7, -8, -9, -10, -11, -12, -13, -81, -15,
	-16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -6, 0, 0, 0, 0, 161, 0, 0, -7, -8,
	-9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 0,
	162, 0, 0, 0, 0, 162, 0, 162, 0, 162, 0, 0, 0, -1, -1, 0, -1, -1, -1, -1, -1,
	0, -1, 0, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1,
	-1, -1, 0, -1, -1, -1, -1, 162, -1, -1, -1, 0, 0, -401, -248, -1, -1, 0, 0,
	-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, -6, 0, 0, 0, 0, 0, 0, -1, -7, -8, -9, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -470, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16,
	-17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -37, -38, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10,
	-11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25,
	-26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -1, -1, 0,
	-1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, 0, 0, -1, -1, -249, -1, 0, 0,
	0, 0, -1, -1, -1, -250, -251, -1, 0, -1, -1, -1, -1, 157, -1, -1, -1, 0, 0,
	0, 0, -1, -1, 0, 0, -1, 0, 157, 0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 158, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 157, 0, 157, 0, 0, 157, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 157, 0, 157, 0, 157, 0, 157, 157, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 158, 0, 0, 158, 158, 0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 158, 0, 158, 0, 158, 0, 158, 158, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 158, 157, 0, 157, 0, 157, 158, 0, 157, 0, 157, 159,
	0, 157, 159, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0, 0, 157, 0, 0, 0, 157, 0, 0, 157,
	0, 157, 0, 158, 0, 158, 0, 158, 0, 0, 158, 0, 158, -1, -1, 158, -1, -1, -1,
	-1, -1, 0, -1, 0, -1, -225, -1, -1, 158, 0, -1, -1, 158, -1, 159, 158, 0,
	158, -1, -226, -1, 0, 0, -227, 0, -1, -1, -1, -1, 0, -1, -1, -1, 0, 159, 0,
	159, -1, -1, 159, 159, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0,
	159, 0, 159, 0, 159, 159, 0, 157, 0, 153, 0, 0, 157, 0, 157, 0, 157, 0, -1,
	0, 0, 0, 0, 153, 159, 0, 153, 0, 0, 0, 159, 0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 158, 0, 158, 0, 158, 0, 0, 0, 157, 0, 0, 0, 0, 159, 0,
	159, 0, 159, 0, 0, 159, 0, 159, 0, 0, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 0, 0, 159, 0, 158, 159, 157, 159, 0, 0, 0, 0, 153, 0, 153, 0, 0,
	153, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 153, 0, 153, 0, 153, 0,
	153, 153, 0, 158, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 153, 0,
	154, 0, 0, 0, 356, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 194, 0, 0, 198, 159, 153, 159, 153, 159, 153, 0, 214,
	153, 0, 153, 0, 0, 153, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	153, 0, 0, 153, 0, 153, 0, 0, 0, 0, 154, 0, 154, 0, 159, 154, 154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 0, 154, 0, 154, 0, 154, 154, 0, 0, 0,
	0, 257, 0, 259, 0, 0, 263, 264, 0, 0, 159, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	154, 282, 0, 284, 0, 286, 0, 288, 289, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 307, 0, 0, 153, 154, 153, 154, 153, 154, 0, 0, 154, 0, 154,
	0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 0, 0, 0, 154, 0, 0, 154,
	372, 154, 374, 0, 376, 0, 0, 379, 0, 381, 153, 0, 385, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 0, 0, 0, 420, 0, 0, 423, 0, 425, 0, 0, 0, -1, -1, 0, -1,
	-1, -1, -1, -1, 0, -1, 153, -1, -1, -1, -1, 0, 0, -1, -1, 0, -1, 0, 0, 0, 0,
	-1, -226, -1, 0, 0, -1, 0, -1, -1, 0, -1, 0, -1, -1, -1, 0, 0, 0, 0, -1, -1,
	154, 0, -1, 0, 0, 154, 0, 154, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 456, 0, 0, -1, 0, 459, 0, 461, 0, 463, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 513, 0, 0, 0, 0, 154, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527,
}

var tmCheck = []int16{
	83, 391, 10, 18, 19, 18, 109, 15, 23, 75, 23, 26, 78, 15, 97, 23, 24, 100, 1,
	21, 3, 4, 5, 6, 7, 108, 109, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 28, 29, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 52,
	0, 399, 43, 44, 45, 46, 47, 48, 81, 9, 49, 18, 19, 154, 53, 54, 23, 158, 57,
	58, 11, 60, 75, 62, 63, 78, 18, 19, 67, 20, 69, 23, 71, 174, 73, 176, 484,
	76, 179, 180, 81, 82, 18, 94, 35, 206, 207, 23, 11, 65, 13, 14, 2, 3, 195,
	216, 197, 20, 199, 18, 201, 202, 2, 10, 23, 206, 207, 17, 21, 19, 20, 10, 35,
	37, 215, 216, 15, 24, 541, 18, 221, 222, 223, 274, 225, 24, 227, 34, 18, 19,
	40, 232, 391, 23, 44, 10, 26, 17, 48, 38, 15, 499, 17, 18, 43, 246, 569, 27,
	571, 24, 18, 19, 575, 17, 18, 23, 15, 258, 17, 260, 18, 262, 81, 27, 265, 89,
	267, 91, 43, 270, 276, 594, 12, 274, 276, 186, 599, 17, 10, 602, 603, 302,
	283, 18, 84, 306, 287, 27, 23, 290, 613, 292, 24, 93, 296, 297, 8, 620, 10,
	622, 10, 302, 274, 15, 369, 306, 20, 308, 309, 632, 18, 23, 24, 81, 24, 23,
	475, 1, 392, 3, 4, 5, 6, 7, 34, 484, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
	20, 21, 22, 23, 24, 392, 343, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 466, 467, 182, 43, 44, 45, 46, 47, 48, 276, 18, 369, 18, 21, 2, 3, 10,
	81, 375, 2, 3, 15, 443, 380, 95, 382, 37, 384, 543, 296, 297, 19, 20, 10,
	472, 392, 19, 222, 15, 396, 1, 81, 82, 8, 406, 10, 23, 24, 406, 107, 15, 18,
	40, 0, 431, 274, 44, 40, 23, 24, 48, 44, 9, 21, 392, 48, 37, 424, 222, 274,
	81, 82, 83, 81, 431, 107, 483, 88, 89, 95, 91, 438, 10, 440, 274, 443, 97,
	98, 465, 100, 101, 247, 103, 10, 2, 3, 24, 108, 15, 565, 50, 10, 369, 541,
	10, 462, 23, 24, 465, 15, 81, 82, 542, 490, 491, 24, 68, 23, 24, 190, 91,
	498, 74, 308, 309, 34, 483, 77, 486, 487, 80, 569, 103, 490, 491, 542, 44,
	575, 18, 406, 48, 498, 18, 154, 155, 10, 157, 158, 10, 251, 15, 18, 529, 15,
	308, 483, 23, 52, 23, 24, 158, 23, 24, 174, 602, 176, 177, 588, 179, 180,
	181, 182, 529, 392, 190, 191, 443, 72, 555, 10, 15, 15, 17, 17, 195, 542,
	197, 392, 199, 610, 201, 202, 203, 24, 275, 18, 24, 559, 555, 11, 23, 559,
	392, 34, 215, 81, 34, 584, 20, 17, 221, 391, 83, 571, 542, 17, 227, 215, 229,
	27, 231, 232, 11, 35, 235, 27, 97, 584, 239, 100, 588, 20, 0, 10, 232, 70,
	594, 108, 15, 10, 298, 9, 300, 18, 15, 603, 35, 258, 23, 260, 24, 262, 610,
	438, 265, 440, 267, 268, 10, 270, 10, 277, 620, 15, 483, 15, 298, 86, 300,
	10, 10, 15, 283, 17, 15, 15, 287, 10, 483, 290, 18, 292, 15, 154, 438, 23,
	440, 158, 15, 10, 17, 10, 559, 483, 15, 475, 15, 10, 274, 274, 389, 10, 15,
	174, 484, 176, 15, 10, 179, 180, 10, 10, 15, 10, 275, 15, 15, 473, 15, 400,
	10, 588, 10, 542, 195, 15, 197, 15, 199, 10, 201, 202, 491, 10, 15, 10, 10,
	542, 15, 302, 15, 15, 57, 610, 215, 169, 10, 358, 10, 360, 221, 15, 542, 15,
	10, 10, 227, 10, 73, 15, 15, 232, 15, 543, 375, 17, 37, 10, 20, 380, 275,
	382, 15, 384, 12, 51, 12, 15, 18, 15, 466, 467, 224, 18, 2, 15, 12, 258, 15,
	260, 492, 262, 15, 18, 265, 109, 267, 148, 18, 270, 24, 18, 18, 79, 18, 18,
	74, 18, 27, 2, 20, 82, 283, 424, 18, 8, 287, 10, 12, 290, 27, 292, 15, 16,
	82, 584, 19, 18, 21, 22, 23, 24, 3, 20, 24, 18, 255, 18, 47, 400, 15, 15, 12,
	36, 23, 18, 535, 40, 41, 42, 15, 462, 15, 15, 47, 15, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 24, 15, 15, 15, 0, 0, 400, 0, 0, 3, 95, 78,
	78, 389, 570, 375, 275, 275, 483, 483, 380, 2, 382, 400, 384, 399, 399, 8,
	491, 10, 215, 109, -1, 86, 15, 16, 406, 224, 19, -1, 21, 22, 23, 224, -1, -1,
	498, -1, -1, -1, 550, -1, -1, -1, 367, 36, -1, -1, -1, 40, 41, 42, -1, -1,
	424, -1, 47, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2,
	462, 306, 344, -1, -1, 8, -1, 10, -1, -1, -1, 444, -1, 16, -1, -1, 19, -1,
	21, 22, 23, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1,
	40, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 81, -1, -1, -1, -1, -1, 1, -1, 3, 4, 5, 6, 7, -1, -1, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, -1, 571, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, -1, -1, -1, 43, 44, 45, 46, 47, 48, 594, -1,
	-1, -1, -1, 599, -1, 601, -1, 603, -1, -1, -1, -1, -1, -1, -1, -1, -1, 613,
	-1, 615, -1, -1, 618, -1, 620, -1, 622, -1, 624, 2, 81, 82, -1, 629, -1, 8,
	632, 10, 634, -1, 636, -1, 15, 16, -1, 641, -1, -1, 21, 22, 23, 24, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 40, 41, 42, -1, -1, -1,
	-1, 47, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1,
	-1, -1, -1, -1, 8, -1, 10, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, 21, 22,
	23, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, 40, 41,
	42, -1, -1, -1, 46, 47, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 2, -1, -1, -1, -1, -1, 8, -1, 10, -1, -1, -1, 1, 15, 16, -1, -1, -1,
	-1, 21, 22, 23, 24, 12, -1, -1, -1, -1, 17, -1, -1, -1, -1, -1, 36, -1, -1,
	-1, 40, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 2, -1, -1, 276, -1, -1, 8, -1, 10, -1, -1, -1, -1, 15,
	16, -1, 85, 86, -1, 21, 22, 23, 24, 296, 297, 94, 95, -1, -1, -1, -1, -1, -1,
	-1, 36, -1, -1, 106, 107, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 81, 0, 1, 276, 3, 4, 5, 6, 7, -1, 9, -1, 11,
	12, 13, 14, -1, 369, 17, 18, 19, 20, 170, 296, 297, -1, 25, 26, 27, 28, 29,
	30, 31, 32, 33, 34, 35, -1, 37, 38, 39, -1, -1, -1, 43, 44, 45, -1, -1, 48,
	83, -1, -1, -1, 406, -1, -1, -1, -1, -1, -1, 209, -1, -1, 97, -1, -1, 100,
	-1, -1, -1, -1, -1, -1, 222, 108, 224, -1, -1, -1, -1, -1, -1, 82, -1, -1,
	-1, -1, -1, -1, -1, 443, -1, -1, -1, -1, 369, -1, -1, -1, -1, -1, -1, 251,
	252, -1, -1, 255, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154,
	-1, -1, -1, 158, 274, 275, -1, -1, -1, -1, -1, 406, -1, -1, -1, -1, -1, -1,
	-1, 174, -1, 176, -1, -1, 179, 180, -1, -1, 298, -1, 300, -1, -1, -1, -1, -1,
	-1, -1, 308, 309, 195, -1, 197, -1, 199, -1, 201, 202, 443, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 215, -1, -1, -1, -1, -1, 221, 222, 223, -1, 225,
	-1, 227, -1, -1, -1, -1, 232, -1, 349, 350, -1, -1, -1, -1, 559, -1, -1, -1,
	-1, -1, 246, -1, -1, -1, -1, -1, -1, -1, 369, -1, -1, -1, 258, -1, 260, -1,
	262, -1, -1, 265, -1, 267, -1, 588, 270, -1, -1, -1, 389, -1, -1, 392, -1,
	-1, -1, -1, -1, 283, -1, 400, -1, 287, -1, -1, 290, 610, 292, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 308, 309, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 559, -1, -1, -1, 438, -1, 440, -1, -1, 443, 444, -1, -1, -1, -1,
	449, -1, -1, -1, -1, 2, -1, -1, -1, 343, -1, -1, -1, 10, 588, 12, -1, 466,
	467, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, 483, -1,
	610, 34, -1, -1, 489, 375, -1, 492, 41, 42, 380, -1, 382, -1, 384, 500, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, -1, 535, -1, -1, -1, 424,
	-1, -1, 542, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 438, -1, 440, 556, -1,
	-1, -1, -1, -1, -1, -1, -1, 565, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, 10,
	462, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, 588, -1, 24, -1, 26, -1, -1, -1,
	-1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, 610, -1, -1, -1, -1,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1,
	-1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1,
	26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2,
	-1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21,
	-1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1,
	41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1,
	18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1,
	-1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1,
	-1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1,
	-1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1,
	10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1,
	-1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1,
	-1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24,
	-1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1,
	21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1,
	-1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1,
	-1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1,
	-1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12,
	-1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1,
	-1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1,
	-1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1,
	-1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1,
	-1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1,
	24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42,
	-1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1,
	-1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1,
	-1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1,
	-1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34,
	-1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1,
	12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1,
	-1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1,
	-1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26,
	-1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1,
	-1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1,
	-1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1,
	-1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41,
	42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18,
	-1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1,
	-1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1,
	-1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1,
	34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10,
	-1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1,
	-1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1,
	-1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1,
	26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2,
	-1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21,
	-1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1,
	41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1,
	18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1,
	-1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1,
	-1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1,
	-1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1,
	10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1,
	-1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1,
	-1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24,
	-1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1,
	21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1,
	-1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1,
	-1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1,
	-1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12,
	-1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1,
	-1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1,
	-1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1,
	-1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1,
	-1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1,
	24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42,
	-1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1,
	-1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1,
	-1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1,
	-1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1,
	-1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	0, -1, 2, -1, -1, -1, -1, 83, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, 95,
	-1, 97, -1, -1, 100, 25, 26, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1,
	-1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 158, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 174, -1, 176, -1, -1, 179, 180, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 215, -1, -1, -1, -1, -1, 221, -1, -1, -1, -1, -1,
	227, -1, -1, -1, -1, 232, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 2, 258, -1, 260, -1, 262, 8, 9,
	265, -1, 267, -1, -1, 270, -1, -1, -1, -1, -1, 276, 83, -1, -1, -1, 26, -1,
	283, -1, -1, -1, 287, -1, -1, 290, 97, 292, -1, 100, 40, 41, 42, -1, -1, -1,
	-1, 108, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1, -1, -1, 158, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 174, -1, 176, -1, -1, 179, 180, 375,
	-1, -1, -1, -1, 380, -1, 382, -1, 384, -1, -1, -1, -1, 195, -1, 197, 392,
	199, -1, 201, 202, -1, -1, -1, 400, -1, -1, -1, -1, -1, 406, -1, -1, 215, -1,
	-1, -1, -1, -1, 221, -1, 223, -1, 225, -1, 227, -1, -1, 424, -1, 232, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 258, -1, 260, -1, 262, -1, -1, 265, -1, 267, 462, -1, 270,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 283, -1, -1, -1, 287, -1, -1,
	290, 41, 292, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, 8, -1, -1, -1,
	542, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, 559, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 375, 40, 41, 42, -1, 380, -1, 382, -1, 384,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1, -1, -1,
	-1, 424, -1, -1, -1, -1, -1, -1, -1, 18, 19, -1, -1, -1, 23, -1, -1, 26, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1,
	-1, 462, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, 19,
	-1, -1, -1, 23, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 41, -1, -1, -1, -1, -1, 545, 546, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 580, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 36, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1, -1, -1, -1, -1, -1, -1, 9, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, 45, -1, -1, -1,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1,
	-1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1, -1,
	-1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 42,
	2, 3, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1,
	41, -1, -1, 44, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, 83, -1, -1, -1, 27, -1, 29, -1, -1, -1, 33, -1, -1, -1, 97, -1, -1,
	100, 41, -1, -1, -1, -1, -1, -1, 108, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1, -1,
	157, 158, -1, -1, -1, -1, -1, -1, 86, -1, -1, -1, -1, -1, -1, -1, -1, 174,
	-1, 176, -1, -1, 179, 180, -1, -1, -1, -1, -1, 107, -1, -1, -1, -1, -1, -1,
	-1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, -1, -1, -1, -1, -1,
	83, -1, -1, -1, 215, -1, -1, -1, -1, -1, 221, -1, -1, -1, 97, -1, 227, 100,
	-1, -1, 231, 232, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 258, -1, 260, -1, 262, -1, -1,
	265, -1, 267, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154,
	283, -1, -1, 158, 287, 209, -1, 290, -1, 292, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 174, 224, 176, -1, -1, 179, 180, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, 255, -1, -1,
	-1, -1, -1, -1, -1, 83, 215, -1, -1, -1, -1, -1, 221, -1, 223, -1, 225, -1,
	227, 97, -1, -1, 100, 232, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1,
	-1, -1, 375, -1, 298, -1, 300, 380, -1, 382, -1, 384, -1, 258, -1, 260, -1,
	262, -1, -1, 265, -1, 267, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 283, -1, 154, -1, 287, -1, 158, 290, -1, 292, -1, -1, -1, 424,
	-1, -1, -1, 349, 350, -1, -1, -1, 174, -1, 176, -1, -1, 179, 180, -1, -1, -1,
	-1, -1, -1, -1, -1, 369, -1, -1, -1, -1, -1, 195, -1, 197, -1, 199, -1, 201,
	202, 462, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, 215, -1, -1, -1, -1,
	-1, 221, -1, 223, -1, 225, -1, 227, 97, -1, -1, 100, 232, -1, -1, -1, -1, -1,
	-1, 108, -1, -1, -1, -1, 375, -1, -1, -1, -1, 380, -1, 382, -1, 384, -1, -1,
	-1, -1, 258, -1, 260, -1, 262, 443, 444, 265, -1, 267, -1, -1, 270, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 283, -1, 154, -1, 287, -1, 158, 290,
	-1, 292, 424, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 174, -1, 176, -1,
	-1, 179, 180, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 195,
	-1, 197, -1, 199, 462, 201, 202, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	83, 215, -1, -1, -1, -1, -1, 221, -1, 223, -1, 225, -1, 227, 97, -1, -1, 100,
	232, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, 375, -1, -1, -1, -1, 380,
	-1, 382, -1, 384, -1, -1, -1, -1, 258, -1, 260, -1, 262, -1, -1, 265, -1,
	267, -1, -1, 270, -1, -1, -1, -1, -1, -1, 588, -1, -1, -1, -1, -1, 283, -1,
	154, -1, 287, -1, 158, 290, -1, 292, 424, -1, -1, -1, -1, -1, 610, -1, -1,
	-1, -1, -1, 174, -1, 176, -1, -1, 179, 180, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 195, -1, 197, -1, 199, 462, 201, 202, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 215, -1, -1, -1, -1, -1, 221, -1, 223, -1,
	225, -1, 227, -1, -1, -1, -1, 232, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 375, 0, -1, -1, -1, 380, -1, 382, -1, 384, 9, -1, -1, -1, 258, -1, 260,
	-1, 262, -1, -1, 265, -1, 267, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 283, -1, 40, 41, 287, -1, -1, 290, -1, 292, 424, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1, -1, 462, -1, -1, -1,
	-1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1,
	-1, -1, 375, -1, 41, 42, -1, 380, 2, 382, -1, 384, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, -1, 39, -1, 41, 42, -1, -1, 424, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, 462, -1, -1, -1, -1,
	-1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41,
	42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 17, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 2, -1, -1, -1, -1, -1, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 41, 42, -1, -1, -1, -1, -1, -1,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 29, -1, -1, -1, 33, -1,
	-1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 83, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1,
	-1, -1, -1, 97, -1, -1, 100, 41, -1, -1, -1, -1, -1, -1, 108, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 154, -1, -1, -1, 158, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 174, -1, 176, -1, -1, 179, 180, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1,
	83, -1, -1, -1, -1, -1, -1, -1, -1, 215, -1, -1, -1, -1, 97, 221, -1, 100,
	-1, -1, -1, 227, -1, -1, -1, 108, 232, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 258, -1, 260,
	-1, 262, -1, -1, 265, -1, 267, -1, -1, 270, -1, -1, -1, -1, -1, -1, 154, -1,
	-1, -1, 158, -1, 283, -1, -1, -1, 287, -1, -1, 290, -1, 292, -1, -1, -1, -1,
	174, -1, 176, -1, -1, 179, 180, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, 83, -1, -1, -1,
	-1, -1, -1, -1, -1, 215, -1, -1, -1, -1, 97, 221, -1, 100, -1, -1, -1, 227,
	-1, -1, -1, 108, 232, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 375, -1, -1, -1, -1, 380, 258, 382, 260, 384, 262, -1,
	-1, 265, -1, 267, -1, -1, 270, -1, -1, -1, -1, -1, -1, 154, -1, -1, -1, 158,
	-1, 283, -1, -1, -1, 287, -1, -1, 290, -1, 292, -1, -1, -1, -1, 174, -1, 176,
	-1, 424, 179, 180, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 215, 462, -1, -1, -1, -1, 221, -1, -1, -1, -1, -1, 227, -1, -1, -1,
	-1, 232, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 375, -1, -1, 2, -1, 380, 258, 382, 260, 384, 262, -1, -1, 265, -1,
	267, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 283, -1,
	-1, -1, 287, -1, -1, 290, -1, 292, -1, 41, -1, -1, -1, -1, -1, -1, 424, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 41, -1, -1, -1, -1, 462, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, 375, -1, -1, -1,
	-1, 380, -1, 382, -1, 384, -1, -1, -1, 0, 1, -1, 3, 4, 5, 6, 7, -1, 9, -1,
	11, 12, 13, 14, -1, -1, 17, 18, 19, 20, -1, -1, -1, -1, 25, 26, 27, 28, 29,
	30, -1, 32, 33, 34, 35, 424, 37, 38, 39, -1, -1, 8, 43, 44, 45, -1, -1, 48,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 462, 41, -1, -1, -1, -1, -1, -1, 82, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 0, 1, -1, 3, 4, 5, 6, 7, -1, 9, -1, 11, 12, 13,
	14, -1, -1, 17, 18, 19, 20, -1, -1, -1, -1, 25, 26, 27, 28, 29, 30, -1, 32,
	33, 34, 35, 83, 37, 38, 39, -1, -1, -1, -1, 44, 45, -1, -1, 48, -1, 97, -1,
	-1, 100, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 83, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1, -1, -1, 97, -1, -1, 100,
	-1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 174,
	-1, 176, -1, -1, 179, 180, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1, -1,
	-1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, -1, -1, -1, -1, 174,
	-1, 176, -1, -1, 179, 180, -1, -1, -1, -1, 221, -1, -1, -1, -1, -1, 227, -1,
	-1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 83, -1, -1, 221, 258, -1, 260, -1, 262, 227, -1,
	265, -1, 267, 97, -1, 270, 100, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1,
	283, -1, -1, -1, 287, -1, -1, 290, -1, 292, -1, 258, -1, 260, -1, 262, -1,
	-1, 265, -1, 267, 0, 1, 270, 3, 4, 5, 6, 7, -1, 9, -1, 11, 12, 13, 14, 283,
	-1, 17, 18, 287, 20, 154, 290, -1, 292, 25, 26, 27, -1, -1, 30, -1, 32, 33,
	34, 35, -1, 37, 38, 39, -1, 174, -1, 176, 44, 45, 179, 180, 48, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 195, -1, 197, -1, 199, -1, 201, 202,
	-1, 375, -1, 83, -1, -1, 380, -1, 382, -1, 384, -1, 82, -1, -1, -1, -1, 97,
	221, -1, 100, -1, -1, -1, 227, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1,
	-1, 375, -1, -1, -1, -1, 380, -1, 382, -1, 384, -1, -1, -1, 424, -1, -1, -1,
	-1, 258, -1, 260, -1, 262, -1, -1, 265, -1, 267, -1, -1, 270, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 283, -1, -1, -1, 287, -1, 424, 290, 462, 292,
	-1, -1, -1, -1, 174, -1, 176, -1, -1, 179, 180, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, 462, -1,
	83, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, 221, -1, 100, -1,
	-1, -1, 227, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, 83, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 375, 97, -1, -1, 100, 380, 258, 382, 260,
	384, 262, -1, 108, 265, -1, 267, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 283, -1, -1, -1, 287, -1, -1, 290, -1, 292, -1, -1, -1, -1,
	174, -1, 176, -1, 424, 179, 180, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, -1, 174, -1,
	176, -1, -1, 179, 180, -1, -1, 462, -1, -1, -1, -1, 221, -1, -1, -1, -1, -1,
	227, 195, -1, 197, -1, 199, -1, 201, 202, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 375, -1, 221, -1, -1, 380, 258, 382, 260, 384,
	262, -1, -1, 265, -1, 267, -1, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 283, -1, -1, -1, 287, -1, -1, 290, 258, 292, 260, -1, 262, -1,
	-1, 265, -1, 267, 424, -1, 270, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 283, -1, -1, -1, 287, -1, -1, 290, -1, 292, -1, -1, -1, 0, 1, -1, 3, 4,
	5, 6, 7, -1, 9, 462, 11, 12, 13, 14, -1, -1, 17, 18, -1, 20, -1, -1, -1, -1,
	25, 26, 27, -1, -1, 30, -1, 32, 33, -1, 35, -1, 37, 38, 39, -1, -1, -1, -1,
	44, 45, 375, -1, 48, -1, -1, 380, -1, 382, -1, 384, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 375, -1,
	-1, 82, -1, 380, -1, 382, -1, 384, -1, -1, -1, -1, -1, -1, 424, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 424, -1, -1, -1, -1, 462, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 462,
}

var tmRuleLen = []int8{
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 5, 5, 4, 5, 4, 4, 3, 2, 0, 2, 0, 6,
	3, 3, 3, 4, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 3, 3,
	1, 9, 8, 8, 7, 8, 7, 7, 6, 6, 5, 8, 7, 7, 6, 7, 6, 6, 5, 5, 4, 8, 7, 7, 6, 7,
	6, 6, 5, 5, 4, 7, 6, 6, 5, 6, 5, 5, 4, 4, 3, 3, 3, 1, 1, 5, 4, 4, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 8, 7, 7, 6, 7, 6, 6, 5, 7, 6, 6, 5, 6, 5, 5, 4, 7,
	6, 6, 5, 8, 7, 7, 6, 7, 6, 6, 5, 3, 1, 1, 1, 1, 7, 5, 6, 4, 4, 4, 4, 5, 5, 6,
	4, 4, 5, 3, 1, 3, 1, 2, 1, 1, 2, 1, 3, 4, 3, 3, 2, 4, 3, 3, 2, 3, 2, 2, 1, 3,
	2, 2, 1, 3, 2, 2, 1, 2, 1, 1, 0, 1, 3, 3, 3, 5, 4, 3, 2, 2, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 2, 1, 2, 1, 3, 3, 1, 2, 1, 3, 1, 4, 2, 1, 3, 5, 5,
	2, 2, 4, 1, 4, 2, 1, 3, 2, 1, 3, 3, 3, 1, 3, 1, 4, 2, 1, 3, 3, 1, 1, 0, 3, 1,
	2, 2, 1, 1, 1, 1, 1, 2, 3, 3, 1, 3, 3, 1, 4, 3, 3, 2, 1, 3, 1, 1, 0,
}

var tmRuleSymbol = []int32{
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 86, 87, 88, 88, 89, 89, 89,
	90, 91, 92, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 95, 95, 96, 96, 97, 98,
	99, 99, 100, 101, 102, 102, 103, 104, 104, 105, 105, 105, 105, 106, 106, 106,
	106, 106, 107, 108, 109, 109, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 112, 113, 114, 114, 115, 115, 115, 116, 116, 117, 118, 119,
	119, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 123, 124, 124, 124, 125, 126, 126, 126, 126,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 128, 128, 129, 129, 130, 130,
	131, 131, 132, 132, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 134,
	135, 135, 136, 136, 136, 136, 137, 138, 139, 139, 140, 140, 140, 140, 141,
	141, 141, 141, 141, 142, 142, 143, 144, 144, 145, 146, 146, 146, 147, 147,
	148, 148, 149, 149, 150, 151, 151, 151, 151, 151, 151, 151, 151, 152, 153,
	153, 153, 153, 154, 154, 154, 155, 155, 156, 157, 157, 157, 158, 159, 160,
	160, 161, 161, 162, 162, 162, 162, 163, 163, 164, 164, 165, 165, 165, 165,
	166, 166, 166, 167, 167, 167, 167, 167, 167, 168, 168, 169, 169,
}

var tmRuleType = [...]NodeType{
	Identifier,           // identifier : ID
	Identifier,           // identifier : 'brackets'
	Identifier,           // identifier : 'inline'
	Identifier,           // identifier : 'prec'
	Identifier,           // identifier : 'shift'
	Identifier,           // identifier : 'input'
	Identifier,           // identifier : 'left'
	Identifier,           // identifier : 'right'
	Identifier,           // identifier : 'nonassoc'
	Identifier,           // identifier : 'generate'
	Identifier,           // identifier : 'assert'
	Identifier,           // identifier : 'empty'
	Identifier,           // identifier : 'nonempty'
	Identifier,           // identifier : 'global'
	Identifier,           // identifier : 'explicit'
	Identifier,           // identifier : 'lookahead'
	Identifier,           // identifier : 'param'
	Identifier,           // identifier : 'flag'
	Identifier,           // identifier : 'no-eoi'
	Identifier,           // identifier : 's'
	Identifier,           // identifier : 'x'
	Identifier,           // identifier : 'expect'
	Identifier,           // identifier : 'expect-rr'
	Identifier,           // identifier : 'class'
	Identifier,           // identifier : 'interface'
	Identifier,           // identifier : 'space'
	Identifier,           // identifier : 'extend'
	Identifier,           // identifier : 'inject'
	Identifier,           // identifier : 'layout'
	Identifier,           // identifier : 'language'
	Identifier,           // identifier : 'lalr'
	Identifier,           // identifier : 'lexer'
	Identifier,           // identifier : 'parser'
	Identifier,           // identifier_Keywords : ID
	Identifier,           // identifier_Keywords : 'brackets'
	Identifier,           // identifier_Keywords : 'inline'
	Identifier,           // identifier_Keywords : 'prec'
	Identifier,           // identifier_Keywords : 'shift'
	Identifier,           // identifier_Keywords : 'input'
	Identifier,           // identifier_Keywords : 'left'
	Identifier,           // identifier_Keywords : 'right'
	Identifier,           // identifier_Keywords : 'nonassoc'
	Identifier,           // identifier_Keywords : 'generate'
	Identifier,           // identifier_Keywords : 'assert'
	Identifier,           // identifier_Keywords : 'empty'
	Identifier,           // identifier_Keywords : 'nonempty'
	Identifier,           // identifier_Keywords : 'global'
	Identifier,           // identifier_Keywords : 'explicit'
	Identifier,           // identifier_Keywords : 'lookahead'
	Identifier,           // identifier_Keywords : 'param'
	Identifier,           // identifier_Keywords : 'flag'
	Identifier,           // identifier_Keywords : 'no-eoi'
	Identifier,           // identifier_Keywords : 's'
	Identifier,           // identifier_Keywords : 'x'
	Identifier,           // identifier_Keywords : 'expect'
	Identifier,           // identifier_Keywords : 'expect-rr'
	Identifier,           // identifier_Keywords : 'class'
	Identifier,           // identifier_Keywords : 'interface'
	Identifier,           // identifier_Keywords : 'space'
	Identifier,           // identifier_Keywords : 'extend'
	Identifier,           // identifier_Keywords : 'inject'
	Identifier,           // identifier_Keywords : 'layout'
	Identifier,           // identifier_Keywords : 'language'
	Identifier,           // identifier_Keywords : 'lalr'
	Identifier,           // identifier_Keywords : 'lexer'
	Identifier,           // identifier_Keywords : 'parser'
	Identifier,           // identifier_Keywords : 'true'
	Identifier,           // identifier_Keywords : 'false'
	Identifier,           // identifier_Keywords : 'separator'
	Identifier,           // identifier_Keywords : 'as'
	Identifier,           // identifier_Keywords : 'import'
	Identifier,           // identifier_Keywords : 'set'
	Identifier,           // identifier_Str : ID
	Identifier,           // identifier_Str : quoted_id
	Identifier,           // identifier_Str : scon
	Identifier,           // identifier_Str : 'brackets'
	Identifier,           // identifier_Str : 'inline'
	Identifier,           // identifier_Str : 'prec'
	Identifier,           // identifier_Str : 'shift'
	Identifier,           // identifier_Str : 'input'
	Identifier,           // identifier_Str : 'left'
	Identifier,           // identifier_Str : 'right'
	Identifier,           // identifier_Str : 'nonassoc'
	Identifier,           // identifier_Str : 'generate'
	Identifier,           // identifier_Str : 'assert'
	Identifier,           // identifier_Str : 'empty'
	Identifier,           // identifier_Str : 'nonempty'
	Identifier,           // identifier_Str : 'global'
	Identifier,           // identifier_Str : 'explicit'
	Identifier,           // identifier_Str : 'lookahead'
	Identifier,           // identifier_Str : 'param'
	Identifier,           // identifier_Str : 'flag'
	Identifier,           // identifier_Str : 'no-eoi'
	Identifier,           // identifier_Str : 's'
	Identifier,           // identifier_Str : 'x'
	Identifier,           // identifier_Str : 'expect'
	Identifier,           // identifier_Str : 'expect-rr'
	Identifier,           // identifier_Str : 'class'
	Identifier,           // identifier_Str : 'interface'
	Identifier,           // identifier_Str : 'space'
	Identifier,           // identifier_Str : 'extend'
	Identifier,           // identifier_Str : 'inject'
	Identifier,           // identifier_Str : 'layout'
	Identifier,           // identifier_Str : 'language'
	Identifier,           // identifier_Str : 'lalr'
	Identifier,           // identifier_Str : 'lexer'
	Identifier,           // identifier_Str : 'parser'
	IntegerLiteral,       // integer_literal : icon
	StringLiteral,        // string_literal : scon
	BooleanLiteral,       // boolean_literal : 'true'
	BooleanLiteral,       // boolean_literal : 'false'
	0,                    // literal : string_literal
	0,                    // literal : integer_literal
	0,                    // literal : boolean_literal
	Pattern,              // pattern : regexp
	Command,              // command : code
	SyntaxProblem,        // syntax_problem : error
	0,                    // file : header import__optlist option_optlist syntax_problem lexer_section parser_section
	0,                    // file : header import__optlist option_optlist syntax_problem lexer_section
	0,                    // file : header import__optlist option_optlist syntax_problem parser_section
	0,                    // file : header import__optlist option_optlist syntax_problem
	0,                    // file : header import__optlist option_optlist lexer_section parser_section
	0,                    // file : header import__optlist option_optlist lexer_section
	0,                    // file : header import__optlist option_optlist parser_section
	0,                    // file : header import__optlist option_optlist
	0,                    // import__optlist : import__optlist import_
	0,                    // import__optlist :
	0,                    // option_optlist : option_optlist option
	0,                    // option_optlist :
	Header,               // header : 'language' identifier_Keywords '(' identifier_Keywords ')' ';'
	Header,               // header : 'language' identifier_Keywords ';'
	LexerSection,         // lexer_section : '::' .recoveryScope 'lexer' lexer_parts
	ParserSection,        // parser_section : '::' .recoveryScope 'parser' grammar_parts
	Import,               // import_ : 'import' identifier string_literal ';'
	Import,               // import_ : 'import' string_literal ';'
	Option,               // option : identifier '=' expression
	Symref,               // symref : identifier_Str
	Symref,               // symref_Args : identifier_Str args
	Symref,               // symref_Args : identifier_Str
	RawType,              // rawType : code
	0,                    // lexer_parts : lexer_part
	0,                    // lexer_parts : lexer_parts lexer_part_OrSyntaxError
	0,                    // lexer_part : named_pattern
	0,                    // lexer_part : lexeme
	0,                    // lexer_part : lexer_directive
	0,                    // lexer_part : start_conditions_scope
	0,                    // lexer_part_OrSyntaxError : named_pattern
	0,                    // lexer_part_OrSyntaxError : lexeme
	0,                    // lexer_part_OrSyntaxError : lexer_directive
	0,                    // lexer_part_OrSyntaxError : start_conditions_scope
	0,                    // lexer_part_OrSyntaxError : syntax_problem
	NamedPattern,         // named_pattern : identifier '=' pattern
	StartConditionsScope, // start_conditions_scope : start_conditions '{' .recoveryScope lexer_parts '}'
	StartConditions,      // start_conditions : '<' '*' '>'
	StartConditions,      // start_conditions : '<' stateref_list_Comma_separated '>'
	0,                    // stateref_list_Comma_separated : stateref_list_Comma_separated ',' stateref
	0,                    // stateref_list_Comma_separated : stateref
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':'
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':'
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':'
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':'
	LexemeId,             // lexeme_id : '(' identifier_Keywords ')'
	LexemeAttrs,          // lexeme_attrs : '(' lexeme_attribute ')'
	LexemeAttribute,      // lexeme_attribute : 'class'
	LexemeAttribute,      // lexeme_attribute : 'space'
	DirectiveBrackets,    // lexer_directive : '%' 'brackets' symref symref ';'
	InclusiveStartConds,  // lexer_directive : '%' 's' lexer_state_list_Comma_separated ';'
	ExclusiveStartConds,  // lexer_directive : '%' 'x' lexer_state_list_Comma_separated ';'
	0,                    // lexer_state_list_Comma_separated : lexer_state_list_Comma_separated ',' lexer_state
	0,                    // lexer_state_list_Comma_separated : lexer_state
	Stateref,             // stateref : identifier
	LexerState,           // lexer_state : identifier
	0,                    // grammar_parts : grammar_part
	0,                    // grammar_parts : grammar_parts grammar_part_OrSyntaxError
	0,                    // grammar_part : nonterm
	0,                    // grammar_part : template_param
	0,                    // grammar_part : directive
	0,                    // grammar_part_OrSyntaxError : nonterm
	0,                    // grammar_part_OrSyntaxError : template_param
	0,                    // grammar_part_OrSyntaxError : directive
	0,                    // grammar_part_OrSyntaxError : syntax_problem
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : identifier rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier rawType ':' rules ';'
	Nonterm,              // nonterm : identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier ':' rules ';'
	NontermAlias,         // nonterm_alias : '[' identifier_Keywords ']'
	Assoc,                // assoc : 'left'
	Assoc,                // assoc : 'right'
	Assoc,                // assoc : 'nonassoc'
	ParamModifier,        // param_modifier : 'lookahead'
	TemplateParam,        // template_param : '%' param_modifier param_type identifier '=' param_value ';'
	TemplateParam,        // template_param : '%' param_modifier param_type identifier ';'
	TemplateParam,        // template_param : '%' param_type identifier '=' param_value ';'
	TemplateParam,        // template_param : '%' param_type identifier ';'
	DirectivePrio,        // directive : '%' assoc references ';'
	DirectiveInput,       // directive : '%' 'input' inputref_list_Comma_separated ';'
	DirectiveInterface,   // directive : '%' 'interface' identifier_list_Comma_separated ';'
	DirectiveAssert,      // directive : '%' 'assert' 'empty' rhsSet ';'
	DirectiveAssert,      // directive : '%' 'assert' 'nonempty' rhsSet ';'
	DirectiveSet,         // directive : '%' 'generate' identifier '=' rhsSet ';'
	DirectiveExpect,      // directive : '%' 'expect' integer_literal ';'
	DirectiveExpectRR,    // directive : '%' 'expect-rr' integer_literal ';'
	DirectiveInject,      // directive : '%' 'inject' symref reportClause ';'
	0,                    // identifier_list_Comma_separated : identifier_list_Comma_separated ',' identifier
	0,                    // identifier_list_Comma_separated : identifier
	0,                    // inputref_list_Comma_separated : inputref_list_Comma_separated ',' inputref
	0,                    // inputref_list_Comma_separated : inputref
	Inputref,             // inputref : symref 'no-eoi'
	Inputref,             // inputref : symref
	0,                    // references : symref
	0,                    // references : references symref
	0,                    // rules : rule0
	0,                    // rules : rules '|' rule0
	Rule,                 // rule0 : predicate rhsParts rhsSuffix reportClause
	Rule,                 // rule0 : predicate rhsParts rhsSuffix
	Rule,                 // rule0 : predicate rhsParts reportClause
	Rule,                 // rule0 : predicate rhsParts
	Rule,                 // rule0 : predicate rhsEmpty rhsSuffix reportClause
	Rule,                 // rule0 : predicate rhsEmpty rhsSuffix
	Rule,                 // rule0 : predicate rhsEmpty reportClause
	Rule,                 // rule0 : predicate rhsEmpty
	Rule,                 // rule0 : predicate rhsSuffix reportClause
	Rule,                 // rule0 : predicate rhsSuffix
	Rule,                 // rule0 : predicate reportClause
	Rule,                 // rule0 : predicate
	Rule,                 // rule0 : rhsParts rhsSuffix reportClause
	Rule,                 // rule0 : rhsParts rhsSuffix
	Rule,                 // rule0 : rhsParts reportClause
	Rule,                 // rule0 : rhsParts
	Rule,                 // rule0 : rhsEmpty rhsSuffix reportClause
	Rule,                 // rule0 : rhsEmpty rhsSuffix
	Rule,                 // rule0 : rhsEmpty reportClause
	Rule,                 // rule0 : rhsEmpty
	Rule,                 // rule0 : rhsSuffix reportClause
	Rule,                 // rule0 : rhsSuffix
	Rule,                 // rule0 : reportClause
	Rule,                 // rule0 :
	0,                    // rule0 : syntax_problem
	Predicate,            // predicate : '[' predicate_expression ']'
	RhsSuffix,            // rhsSuffix : '%' 'prec' symref
	RhsSuffix,            // rhsSuffix : '%' 'shift' symref
	ReportClause,         // reportClause : '->' identifier '/' identifier_list_Comma_separated reportAs
	ReportClause,         // reportClause : '->' identifier '/' identifier_list_Comma_separated
	ReportClause,         // reportClause : '->' identifier reportAs
	ReportClause,         // reportClause : '->' identifier
	ReportAs,             // reportAs : 'as' identifier
	RhsEmpty,             // rhsEmpty : '%' 'empty'
	0,                    // rhsParts : rhsPart
	0,                    // rhsParts : rhsParts rhsPart_OrSyntaxError
	0,                    // rhsPart : rhsAssignment
	0,                    // rhsPart : command
	0,                    // rhsPart : rhsStateMarker
	0,                    // rhsPart : rhsLookahead
	0,                    // rhsPart_OrSyntaxError : rhsAssignment
	0,                    // rhsPart_OrSyntaxError : command
	0,                    // rhsPart_OrSyntaxError : rhsStateMarker
	0,                    // rhsPart_OrSyntaxError : rhsLookahead
	0,                    // rhsPart_OrSyntaxError : syntax_problem
	0,                    // lookahead_predicate_list_And_separated : lookahead_predicate_list_And_separated '&' lookahead_predicate
	0,                    // lookahead_predicate_list_And_separated : lookahead_predicate
	RhsLookahead,         // rhsLookahead : '(?=' lookahead_predicate_list_And_separated ')'
	LookaheadPredicate,   // lookahead_predicate : '!' symref
	LookaheadPredicate,   // lookahead_predicate : symref
	StateMarker,          // rhsStateMarker : '.' identifier
	0,                    // rhsAssignment : rhsOptional
	RhsAssignment,        // rhsAssignment : identifier_Str '=' rhsOptional
	RhsPlusAssignment,    // rhsAssignment : identifier_Str '+=' rhsOptional
	0,                    // rhsOptional : rhsCast
	RhsOptional,          // rhsOptional : rhsCast '?'
	0,                    // rhsCast : rhsAlias
	RhsCast,              // rhsCast : rhsAlias 'as' symref_Args
	0,                    // rhsAlias : rhsPrimary
	RhsAlias,             // rhsAlias : rhsPrimary '[' identifier_Keywords ']'
	ListSeparator,        // listSeparator : 'separator' references
	RhsSymbol,            // rhsPrimary : symref_Args
	RhsNested,            // rhsPrimary : '(' .recoveryScope rules ')'
	RhsPlusList,          // rhsPrimary : '(' .recoveryScope rhsParts listSeparator ')' '+'
	RhsStarList,          // rhsPrimary : '(' .recoveryScope rhsParts listSeparator ')' '*'
	RhsPlusQuantifier,    // rhsPrimary : rhsPrimary '+'
	RhsStarQuantifier,    // rhsPrimary : rhsPrimary '*'
	RhsIgnored,           // rhsPrimary : '$' '(' .recoveryScope rules ')'
	0,                    // rhsPrimary : rhsSet
	RhsSet,               // rhsSet : 'set' '(' .recoveryScope setExpression ')'
	SetSymbol,            // setPrimary : identifier symref_Args
	SetSymbol,            // setPrimary : symref_Args
	SetCompound,          // setPrimary : '(' setExpression ')'
	SetComplement,        // setPrimary : '~' setPrimary
	0,                    // setExpression : setPrimary
	SetOr,                // setExpression : setExpression '|' setExpression
	SetAnd,               // setExpression : setExpression '&' setExpression
	0,                    // nonterm_param_list_Comma_separated : nonterm_param_list_Comma_separated ',' nonterm_param
	0,                    // nonterm_param_list_Comma_separated : nonterm_param
	NontermParams,        // nonterm_params : '<' nonterm_param_list_Comma_separated '>'
	0,                    // nonterm_param : param_ref
	InlineParameter,      // nonterm_param : identifier identifier '=' param_value
	InlineParameter,      // nonterm_param : identifier identifier
	ParamRef,             // param_ref : identifier
	SymrefArgs,           // args : '<' argument_list_Comma_separatedopt '>'
	0,                    // argument_list_Comma_separated : argument_list_Comma_separated ',' argument
	0,                    // argument_list_Comma_separated : argument
	0,                    // argument_list_Comma_separatedopt : argument_list_Comma_separated
	0,                    // argument_list_Comma_separatedopt :
	ArgumentVal,          // argument : param_ref ':' param_value
	ArgumentVal,          // argument : param_ref
	ArgumentTrue,         // argument : '+' param_ref
	ArgumentFalse,        // argument : '~' param_ref
	ParamType,            // param_type : 'flag'
	ParamType,            // param_type : 'param'
	0,                    // param_value : literal
	0,                    // param_value : param_ref
	0,                    // predicate_primary : param_ref
	PredicateNot,         // predicate_primary : '!' param_ref
	PredicateEq,          // predicate_primary : param_ref '==' literal
	PredicateNotEq,       // predicate_primary : param_ref '!=' literal
	0,                    // predicate_expression : predicate_primary
	PredicateAnd,         // predicate_expression : predicate_expression '&&' predicate_expression
	PredicateOr,          // predicate_expression : predicate_expression '||' predicate_expression
	0,                    // expression : literal
	Array,                // expression : '[' expression_list_Comma_separated ',' ']'
	Array,                // expression : '[' expression_list_Comma_separated ']'
	Array,                // expression : '[' ',' ']'
	Array,                // expression : '[' ']'
	0,                    // expression : syntax_problem
	0,                    // expression_list_Comma_separated : expression_list_Comma_separated ',' expression
	0,                    // expression_list_Comma_separated : expression
	0,                    // rawTypeopt : rawType
	0,                    // rawTypeopt :
}

// set(follow ERROR) = SCON, REM, COLONCOLON, OR, SEMICOLON, DOT, COMMA, RBRACK, LPAREN, LPARENQUESTASSIGN, MINUSGT, RPAREN, RBRACE, LT, DOLLAR, ERROR, ID, QUOTED_ID, SEPARATOR, SET, ASSERT, BRACKETS, CLASS, EMPTY, EXPECT, EXPECTMINUSRR, EXPLICIT, EXTEND, FLAG, GENERATE, GLOBAL, INJECT, INLINE, INPUT, INTERFACE, LALR, LANGUAGE, LAYOUT, LEFT, LEXER, LOOKAHEAD, NOMINUSEOI, NONASSOC, NONEMPTY, PARAM, PARSER, PREC, RIGHT, CHAR_S, SHIFT, SPACE, CHAR_X, CODE
var afterErr = []token.Type{
	2, 8, 9, 10, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 36, 40, 41, 42, 46, 47,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
}
