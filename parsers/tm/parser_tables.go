// generated by Textmapper; DO NOT EDIT

package tm

import (
	"fmt"

	"github.com/inspirer/textmapper/parsers/tm/token"
)

var recoveryScopeStates = map[int]bool{
	108: true,
	152: true,
	187: true,
	188: true,
	240: true,
	381: true,
}

var tmNonterminals = [...]string{
	"identifier",
	"identifier_Keywords",
	"integer_literal",
	"string_literal",
	"boolean_literal",
	"literal",
	"pattern",
	"command",
	"syntax_problem",
	"file",
	"import__optlist",
	"option_optlist",
	"header",
	"lexer_section",
	"parser_section",
	"import_",
	"option",
	"symref",
	"symref_Args",
	"rawType",
	"lexer_parts",
	"lexer_part",
	"lexer_part_OrSyntaxError",
	"named_pattern",
	"start_conditions_scope",
	"start_conditions",
	"stateref_list_Comma_separated",
	"lexeme",
	"lexeme_attrs",
	"lexeme_attribute",
	"lexer_directive",
	"lexer_state_list_Comma_separated",
	"stateref",
	"lexer_state",
	"grammar_parts",
	"grammar_part",
	"grammar_part_OrSyntaxError",
	"nonterm",
	"assoc",
	"param_modifier",
	"template_param",
	"directive",
	"identifier_list_Comma_separated",
	"inputref_list_Comma_separated",
	"inputref",
	"references",
	"rules",
	"rule0",
	"predicate",
	"rhsSuffix",
	"reportClause",
	"reportAs",
	"rhsParts",
	"rhsPart",
	"rhsPart_OrSyntaxError",
	"lookahead_predicate_list_And_separated",
	"rhsLookahead",
	"lookahead_predicate",
	"rhsStateMarker",
	"rhsAnnotated",
	"rhsAssignment",
	"rhsOptional",
	"rhsCast",
	"listSeparator",
	"rhsPrimary",
	"rhsSet",
	"setPrimary",
	"setExpression",
	"annotation_list",
	"annotations",
	"annotation",
	"nonterm_param_list_Comma_separated",
	"nonterm_params",
	"nonterm_param",
	"param_ref",
	"args",
	"argument_list_Comma_separated",
	"argument_list_Comma_separatedopt",
	"argument",
	"param_type",
	"param_value",
	"predicate_primary",
	"predicate_expression",
	"expression",
	"expression_list_Comma_separated",
	"rawTypeopt",
}

func symbolName(sym int32) string {
	if sym == noToken {
		return "<no-token>"
	}
	if sym < int32(token.NumTokens) {
		return token.Type(sym).String()
	}
	if i := int(sym) - int(token.NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmDefGoto = []int32{
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
}

var tmGoto = []int32{
	-1, 450, 5019, 130, 3009, 4660, -336, 1853, 4769, 642, 677, 599, 682, 380,
	13, 601, 586, 5050, 2937, -12, 60, 183, 243, -234, -212, -144, 381, -131,
	-82, 232, -71, 126, -42, -24, 459, 461, 377, 113, 382, 385, 214, 230, 248,
	305, -132, 239, 5399, 53, 6052, 5695, 1861, 400, 5998, 6012, 172, 590, 5759,
	293, 5883, 5906, 5667, 5111, 5235, 519, 5289, 4965, -183, -5, 5381, 5493,
	5057, 616, 511, 463, 2495, 198, 512, 513, 347, -115, -103, 159, 181, 48, 551,
	227,
}

var tmDefAct = []int32{
	-1, -1, -1, 91, -1, 0, 10, 1, 23, 11, 21, 22, 14, -1, 17, 9, 13, 27, 2, 5,
	24, 30, 29, 28, 6, 31, 15, 18, 8, 12, 16, 32, 3, 7, 19, 4, 25, 20, -1, -1,
	-1, 299, 33, 69, 67, 70, 68, 71, 66, 43, 34, 56, 44, 54, 55, 47, 59, 50, 42,
	46, 60, 35, 38, 57, 63, 62, 61, 39, 64, 48, 51, 41, 45, 49, 65, 36, 40, 52,
	37, 58, 53, -1, -1, 81, 26, -1, 303, -1, -1, -1, -1, 104, -1, -1, -1, 298,
	-1, 95, -1, -1, -1, 90, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 80, 103, 257,
	245, 282, -1, 227, -1, -1, 243, -1, 254, 259, 258, 256, 271, 273, 276, 278,
	289, -1, -1, -1, -1, 305, 307, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	73, -1, -1, -1, -1, -1, -1, 88, 92, 72, -1, 75, 74, 103, 77, 76, 78, 331,
	337, 332, 301, -1, -1, -1, -1, 270, -1, 310, -1, 328, -1, -1, -1, -1, 101,
	269, -1, 266, -1, -1, -1, -1, -1, 102, -1, 197, -1, 235, -1, 241, 261, 264,
	-1, 239, 255, 263, 262, 260, 277, 287, 286, -1, 272, -1, -1, 251, -1, -1,
	306, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 99, -1,
	-1, -1, -1, 84, -1, 86, -1, 336, 339, -1, 199, -1, 247, 248, 325, -1, -1, -1,
	246, -1, 283, -1, -1, 268, 267, -1, -1, -1, -1, -1, 292, 295, -1, 274, -1,
	-1, -1, -1, -1, 313, 275, 228, 233, -1, 231, 237, 280, 279, 220, -1, 253, -1,
	304, 195, -1, 196, 193, -1, -1, -1, 189, -1, -1, -1, -1, -1, -1, -1, 94, 98,
	-1, -1, -1, -1, 105, 107, 110, -1, 108, 109, -1, -1, 173, 175, 176, 177, 100,
	82, 335, -1, 334, 198, 326, 327, -1, -1, 225, -1, -1, 265, 288, -1, 294, 291,
	-1, 290, -1, 318, 319, -1, -1, 311, 229, -1, 249, 322, 323, 308, 194, 191,
	-1, 192, 187, -1, 188, 185, -1, -1, -1, -1, -1, -1, -1, 171, -1, 121, -1,
	340, -1, 115, 106, 111, 114, 112, 113, -1, -1, -1, -1, -1, 203, 320, -1, 204,
	-1, -1, -1, 200, 205, 202, 321, 201, -1, -1, -1, 181, 174, 178, 179, 180,
	333, 338, 226, 285, 284, 293, -1, -1, 316, 312, 219, 190, 186, 183, -1, 184,
	-1, 172, -1, 170, -1, 118, -1, 119, 79, 116, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 222, -1, -1, -1, -1, 182, -1, 167, -1, 168, 120, -1, -1, 160,
	-1, 117, -1, -1, -1, -1, 216, 217, -1, -1, 223, 211, -1, 212, 210, -1, -1,
	209, 166, 169, 163, 165, 164, -1, -1, 158, -1, -1, 150, -1, 140, -1, 213,
	214, -1, 218, 221, -1, 207, -1, 162, 154, -1, 156, -1, 148, -1, -1, 138, -1,
	-1, 130, 215, -1, 208, 152, 144, -1, 146, 134, -1, 136, -1, 128, -1, 206,
	142, 132, 124, -1, 126, 122, -1, -1, -1, -1,
}

const tmActionBase = -82

var tmAction = []int32{
	66, 4286, 2867, -82, 4326, -82, -82, -82, -82, -82, -82, -82, -82, 2045, -82,
	-82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82,
	-82, -82, -82, -82, -82, -82, -82, -82, -4, 3392, 4777, -82, -82, -82, -82,
	-82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82,
	-82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82,
	-82, -82, -82, -82, -82, -82, 6, 3472, -82, -82, 3253, -82, 2, 449, 4777,
	4777, -82, 269, 260, 10, -82, 93, -82, 2867, 4366, 3814, -82, 2945, 449, 289,
	-66, 4777, 4414, 522, 4462, 156, 337, -82, 5007, -82, -82, -82, 311, -82,
	814, 14, -82, 595, -82, -82, -82, -82, -82, -82, 3178, 4542, -82, 3873, 85,
	3989, 119, -82, -82, 449, 316, 449, 449, 334, 404, 449, 354, 518, 137, 515,
	-82, 538, 527, 141, 539, 32, 346, -82, -82, -82, 1217, -82, -82, 5734, -82,
	-82, -82, -82, -82, -82, -82, 369, 449, 4777, 4777, -82, 4777, -82, 131, -82,
	184, 351, 668, 4777, -82, -82, 215, -82, 522, 4048, 3873, 3926, 3873, -82,
	-6, -82, 102, -82, 741, -82, -82, -82, 105, -82, -82, -82, -82, -82, -82,
	-82, -82, 3512, -82, 4777, 4777, -82, 186, 4777, -82, 373, 449, 383, 386,
	449, 532, 449, 394, 449, 537, 449, 449, 388, 542, 541, 546, -82, 4120, 4192,
	2945, 359, -82, 484, -82, 545, -82, -82, 393, -82, 409, -82, -82, -82, 91,
	91, 4414, -82, 4414, -82, 4777, 543, -82, -82, 4462, 384, 4048, 4048, 3582,
	-82, -82, 192, -82, 4777, 4777, 158, 368, 579, -82, -82, -82, -82, 139, -82,
	-82, -82, -82, -82, 68, -82, 3512, -82, -82, 422, -82, -82, 425, 449, 429,
	-82, 432, 449, 433, 439, 449, 548, 449, -82, -82, 103, 4576, 187, 3333, -82,
	-82, -82, 4617, -82, -82, 261, 3662, -82, -82, -82, -82, -82, -82, -82, 2125,
	-82, -82, -82, -82, 233, 263, -82, 4673, -22, -82, -82, 196, -82, -82, 4048,
	-82, 4048, -82, -82, 3512, 4243, -82, -82, 4777, -82, -82, -82, -82, -82,
	-82, 443, -82, -82, 446, -82, -82, 452, 449, 464, 4777, 4777, 4777, 581, -82,
	398, -82, 488, -82, 458, -82, -82, -82, -82, -82, -82, 4120, 225, 190, 609,
	609, -82, -82, 4777, -82, 4777, 4777, 4777, -82, -82, -82, -82, -82, 4777,
	76, 4777, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, -82, 221, 223,
	-82, -82, -82, -82, -82, -82, 467, -82, 4777, -82, 62, -82, 284, -82, 4777,
	-82, -82, -82, 1297, 596, 3734, 460, 567, 567, 600, 605, 610, 598, 256, 313,
	-82, 414, 4738, 4777, 472, -82, 608, -82, 4777, -82, -82, 226, 895, -82,
	1377, -82, 1457, 606, 611, 612, -82, -82, 567, 613, -82, -82, 4777, -82, -82,
	476, 3512, -82, -82, -82, -82, -82, -82, 614, 1537, -82, 2205, 976, -82,
	1057, -82, 1618, -82, -82, 615, -82, -82, 3512, -82, 618, -82, -82, 2341,
	-82, 1698, -82, 2422, 1779, -82, 2503, 1138, -82, -82, 619, -82, -82, -82,
	2584, -82, -82, 2665, -82, 1860, -82, 2746, -82, -82, -82, -82, 2827, -82,
	-82, 629, 639, -82, -82,
}

const tmTableLen = 6416

var tmTable = []int16{
	38, 311, -107, 85, 244, 267, -411, -412, -174, 244, -108, -175, 87, -109,
	-90, -110, -111, -91, 244, -91, -105, -99, -92, 312, 242, -91, 92, -100,
	-143, 242, -112, -6, 85, -91, -85, -7, 431, -91, 242, 96, -113, -154, -8, -9,
	-10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39,
	-114, 377, -93, -453, 250, -454, 267, 338, 142, 250, 145, -351, 250, 113,
	133, 134, -93, 313, 250, -151, -160, 252, 456, 378, 150, 153, 252, 162, 113,
	252, 314, 174, 176, 113, 183, 252, -215, -146, 234, 156, 531, 238, -91, 234,
	113, -92, 238, 113, 485, -214, 487, -91, 234, -215, -91, 238, -4, 113, -389,
	215, -162, 230, -218, 113, -163, 113, 113, 118, 324, 113, -253, -254, -219,
	311, -398, 230, 169, 324, -367, 508, 230, -231, 118, 267, 162, 267, -91, 118,
	-91, 230, 315, 313, 324, 239, 241, 312, 113, 183, 183, -93, 176, 317, -347,
	-189, 379, -368, 113, 183, -369, 268, 353, 317, 113, 265, 162, 176, 162, 118,
	113, 118, 118, -255, 113, 118, -289, -374, 377, 400, -342, 309, -256, 341,
	-342, 244, -237, 162, 341, 284, 286, 309, -238, 134, -343, -93, 113, -257,
	-413, 113, 378, 113, 118, 113, -344, 113, 113, 151, -344, 296, 164, 297, 308,
	38, 162, 313, 380, -262, 118, -438, 414, 341, 330, 296, 277, 297, 341, -263,
	314, 323, 176, 330, 176, -344, 183, 297, 337, 444, 183, -439, 265, 265, 162,
	371, 178, -93, -257, 176, 176, 224, 118, 224, 329, 118, -480, 118, -142, 118,
	233, 118, 118, 329, 447, 322, 176, -140, 179, 164, 313, -481, -91, 113, 203,
	309, 373, 113, 329, -455, 113, -454, 113, 379, -482, -93, 369, -173, 308,
	-385, 315, 192, 382, -386, -387, -388, 38, -389, -390, -391, -392, -195,
	-393, -394, 162, -470, -196, -395, -471, -396, -472, -397, 183, -398, -221,
	412, -399, 413, 494, 265, 164, 265, 425, 425, 176, 176, 87, 118, 416, 319,
	457, 118, -224, 203, 118, -242, 118, -91, -190, 83, 192, -195, 113, 380, 183,
	423, 423, 164, -242, 203, 373, 497, -228, 407, 484, -258, 486, -91, 488,
	-195, 308, 164, 164, -195, -248, -348, 454, 440, -291, 183, 183, 284, 511,
	-195, -195, 314, -195, 183, -293, 448, 500, -294, 186, 504, -195, 507, -303,
	509, -338, -298, -327, -91, 178, -328, 178, -430, 118, 164, 310, -195, 515,
	183, -226, 518, -329, -431, 522, 369, 477, -473, 403, -351, -195, 308, 330,
	-195, 331, -356, 527, -195, -357, 434, -195, -195, -359, 183, 473, -360,
	-362, -195, 320, 423, 81, -195, -363, 164, -195, -107, -419, 244, 285, -420,
	-195, 192, 244, -108, 321, -421, -109, 183, -110, -111, -91, 176, -195, 164,
	-434, -195, -462, -423, 155, -91, -451, -91, -476, -112, -6, -477, -497, -85,
	-7, -498, 424, 426, 176, -113, 333, -8, -9, -10, -11, -12, -13, -14, -86,
	-16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -39, -114, -107, 404, 244, 214, 238,
	374, -230, 275, -108, -234, -151, -109, -236, -110, -111, -91, 244, 405, 148,
	94, -296, -239, 376, 136, 335, -300, -306, -238, -112, -6, -305, -307, -85,
	-7, 310, -326, -365, -336, -113, -432, -8, -9, -10, -11, -12, -13, -14, -86,
	-16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -39, -114, -107, 164, 240, -349, 147,
	-429, 435, 240, -108, -160, -113, -460, -466, -110, -111, -91, 240, -467,
	-91, -468, -478, -491, 164, -492, -493, -495, -534, -512, -112, -6, -514,
	-525, -85, -7, 446, -500, -535, 445, -113, 530, -8, -9, -10, -11, -12, -13,
	-14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28,
	-29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -114, -107, 376, 240,
	288, 82, 100, 3, 101, -108, 350, 157, 481, 370, -110, -111, -91, 240, 415,
	402, 317, 443, 318, 398, 185, 258, 399, 273, 274, -112, -6, 135, 0, -85, -7,
	245, 0, 0, -259, -113, 0, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -38, -39, -114, -107, 0, 232, 0, 0, 0, 0, 232, -108,
	0, 0, 0, 0, -110, -111, -91, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, -6,
	0, 0, -85, -7, 0, 0, 0, 0, -113, 0, -8, -9, -10, -11, -12, -13, -14, -86,
	-16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -39, -114, -107, 0, 236, 0, 0, 0, 0,
	236, -108, 0, 0, 0, 0, -110, -111, -91, 236, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-112, -6, 0, 0, 0, -7, 0, 0, 0, 0, -113, 0, -8, -9, -10, -11, -12, -13, -14,
	-86, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29,
	-30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -114, 159, 0, 0, -160, 0,
	0, 0, 0, 159, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -457, 0, 0, 0, 159, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 159, 0, 0, 0, 0, 0, 0, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	-114, 149, 0, 0, -160, 0, 0, 0, 0, 149, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-457, 0, 0, 0, 149, 149, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 149, 0,
	0, 0, 0, 0, 0, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, -114, 139, 0, 0, -160, 0, 0, 0, 0, 139, 139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -457, 0, 0, 0, 139, 139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 139, 139, 0, 0, 0, 0, 0, 0, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139, -114, 129, 0, 0, -160, 0,
	0, 0, 0, 129, 129, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -457, 0, 0, 0, 129, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 129, 0, 0, 0, 0, 0, 0, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	-114, -151, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -244, 0, -161, -245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -85, -7, 0, -162, 0,
	0, 0, -163, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,
	-36, -37, -38, -39, 161, 0, 0, 0, 0, 0, 0, 0, 161, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, -457, 0, 0, 0, 161, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 161, 0, 0, 0, 0, 0, 0, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 151, -432, 0, 0, 0, 0, 0, 0, 151, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -457, 0, 0, 0, 151, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 151, 0, 0, 0, 0, 0, 0, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 151, 141, -432, 0, 0, 0, 0,
	0, 0, 141, 141, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -457, 0, 0, 0, 141, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 141, 141, 0, 0, 0, 0, 0, 0, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	155, -432, 0, 0, 0, 0, 0, 0, 155, 155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -457,
	0, 0, 0, 155, 155, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 155, 155, 0, 0, 0,
	0, 0, 0, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 155, 155, -114, 131, 0, 0, 0, 0, 0, 0, 0, 131, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -457, 0, 0, 0, 131, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 131, 0, 0, 0, 0, 0, 0, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 145, -432, 0, 0, 0, 0, 0, 0,
	145, 145, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -457, 0, 0, 0, 145, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 145, 0, 0, 0, 0, 0, 0, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, 145, -114, 135,
	0, 0, 0, 0, 0, 0, 0, 135, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -457, 0, 0,
	0, 135, 135, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 135, 135, 0, 0, 0, 0, 0,
	0, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, -114, 125, 0, 0, 0, 0, 0, 0, 0, 125, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -457, 0, 0, 0, 125, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93,
	125, 125, 0, 0, 0, 0, 0, 0, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, -114, 114, 0, 0, 0, 0, 0, 0, 104, 121, 0,
	0, 0, 139, 0, 143, 114, 146, 0, 0, 0, 114, 0, 0, 121, 0, 0, 0, 0, 121, 0, 0,
	114, 0, 0, 199, 0, 0, 0, 0, 196, 198, 0, 202, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	114, 114, 0, 0, 114, 0, 121, 0, 121, 121, 223, 0, 121, 227, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 121, 0, 199, 0,
	0, 0, 0, 0, 114, 0, 202, 0, 0, 0, 114, 0, 121, 0, 199, 0, 0, 0, 121, 0, 278,
	0, 280, 0, 0, 0, 281, 26, 0, 0, 0, 0, 26, 0, 0, 26, 114, 0, 0, 114, 0, 114,
	0, 114, 121, 114, 114, 121, 0, 121, -7, 121, 0, 121, 121, 302, 0, -8, -9,
	-10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39,
	26, 0, -151, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 348, 0, 0, 0, -161, -408,
	0, 114, 0, 0, 0, 114, 0, 0, 114, 121, 114, 0, 0, 121, 0, 0, 121, 0, 121, -85,
	-7, 0, -162, 0, 0, 0, -163, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -38, -39, 157, 0, 0, 0, 0, 0, 0, 0, 157, 157, 0,
	114, 0, 0, 0, 0, 0, 0, 0, 121, 0, 0, 0, 0, 0, 157, 157, 0, 0, 0, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 157, 0, 0, 0, 0, 0, 0, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, 157, -114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 0, 0, 0, 467, 0, 0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 499, 0, 501,
	503, 0, 506, 153, 0, 0, 0, 0, 0, 0, 0, 153, 153, 0, 0, 513, 0, 514, 0, 516,
	517, 0, 519, 521, 0, 0, 0, 0, 153, 153, 524, 0, 0, 525, 0, 526, 0, 528, 0, 0,
	0, 0, 529, 153, 153, 0, 0, 0, 0, 0, 0, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153, -114, 147, 0, 0, 0, 0, 0,
	0, 0, 147, 147, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 147, 147, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 147, 147, 0, 0, 0, 0, 0, 0, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, 147, -114,
	137, 0, 0, 0, 0, 0, 0, 0, 137, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 137, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 137, 0, 0, 0, 0, 0,
	0, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137, 137,
	137, 137, -114, 143, 137, 0, 0, 0, 0, 0, 0, 143, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 143, 143, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	143, 0, 0, 0, 0, 0, 0, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, -114, 133, 0, 0, 0, 0, 250, 0, 0, 133, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 133, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 133, 0, 0, 0, 0, 137, 0, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133, 133, -114, 127, 0, 177, 0,
	177, 0, 0, 0, 127, 127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 343, 344, 0, 0, 0, 0, 127,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0, 352, 0, 0, 0, 127, 127, 0, 0, 0, 0, 0, 0,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, -114, 123, 0, 0, 0, 0, 0, 0, 0, 123, 123, 0, 0, 0, 352, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	123, 0, 0, 0, 0, 0, 0, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, -114, -44, -45, -46, -47, -48, -49, -50, -51,
	-52, -53, -54, -55, -56, -57, -58, -59, -60, -61, -62, -63, -64, -65, -66,
	-67, -68, -69, -70, -71, -72, -73, -74, -75, -76, -77, -78, -79, -80, -81,
	-82, -151, -160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -161, 0, 0, 0,
	0, 352, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -85, -7, 0, -162, 0,
	352, 0, -163, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,
	-36, -37, -38, -39, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 116, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 116, 0, 116, 116, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0, 0, 0, 116, 266, 116, 0, 116, 0, 116, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 283, 0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 116, 0, 116, 0, 116, 0, 116, 116, 0, 165, 0, 0, 0, 0, 0, 168, 0, 0, 0, -1,
	-1, -1, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1,
	0, 266, 266, 339, -1, -1, -1, -1, -1, -1, -209, -1, -1, -1, -1, 0, 0, -1, -1,
	0, 165, -1, -1, -1, 0, 0, -1, 0, 0, 0, 0, 0, 116, 0, 0, 0, 116, 0, 0, 116, 0,
	116, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 165, 165,
	168, 0, 0, -104, 0, 0, 0, 0, 0, 0, 0, 0, 302, 0, 0, 266, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 302, 302, 0, 0, 0, 302, 0, 165, 0, 0, 302, 116, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 302, 96,
	165, 0, 0, 0, 0, 0, 0, -308, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, -309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -85, -7, 0, 0, 0, 0, 0, 0,
	-8, -9, -10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,
	-39, 300, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 300, -6, 0, 0, 0, 300, 0,
	0, 0, 0, 300, 0, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 93, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0, 0, 0, 0, 93,
	93, -151, -160, -101, 0, 0, 0, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 0, -7, 0, -162, 0, 0, 0, -163, -8, -9, -10, -11, -12, -13, -14, -86,
	-16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -39, 103, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, -192, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, -7, 0,
	0, 0, 0, 0, 0, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,
	-36, -37, -38, -39, 97, 0, 0, 0, 0, 0, 0, 0, -318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, -85, -7,
	0, 0, 0, 0, 0, 0, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19,
	-20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34,
	-35, -36, -37, -38, -39, -308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -461, -309, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -85, -7, 0, 0, 0, 0, 0,
	0, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37,
	-38, -39, 89, 0, 0, 0, 0, 0, 0, 0, 0, -154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -85, -7, 0, 0, 0, 0,
	0, 0, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21,
	-22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36,
	-37, -38, -39, -110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0,
	0, -7, 0, 0, 0, 0, -113, 0, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -38, -39, 315, 0, -272, 0, 0, 0, -273, 0, 0, 0, 0,
	0, 0, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9, -10, -11, -12, -13, -14, -86, -16,
	-17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -37, -38, -39, 310, 0, 0, 0, 0, 0, 0, 0, 0, 0, 310,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9, -10,
	-11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25,
	-26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -266, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0,
	0, 0, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21,
	-22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36,
	-37, -38, -39, -308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9, -10,
	-11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25,
	-26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -6, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9, -10, -11, -12, -13, -14,
	-15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29,
	-30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -272, 0, 0, 0, -273, 0, 0,
	0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9, -10, -11, -12, -13, -14, -86,
	-16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -39, -6, 0, 0, 0, -7, 0, 0, 0, 0, 0,
	0, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37,
	-38, -39, -85, -7, -151, 0, 0, 0, 0, 0, -8, -9, -10, -11, -12, -13, -14, -86,
	-16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -39, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9,
	-10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39,
	-177, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9, -10, -11, -12,
	-13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27,
	-28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, -184, 0, 0, 0, 0,
	0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9, -10, -11, -12, -13, -14, -86, -16,
	-17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -37, -38, -39, -1, -1, -1, -1, -1, -1, -1, -1, 0,
	-1, 0, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, -1, -1, -1, -210,
	-211, -1, 0, -1, -1, -1, -1, 0, 0, -1, -1, 0, 0, -212, -1, -1, 0, 0, -1, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -370, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -7, 0, 0, 0, 0, 0, -1, -8, -9, -10, -11, -12, -13, -14, -86, -16, -17,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -38, -39, -383, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9,
	-10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39,
	281, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0,
	-8, -9, -10, -11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,
	-39, -474, 0, 0, 0, 0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0,
	0, 0, 0, 0, -7, 0, 0, 0, 0, 0, 0, -8, -9, -10, -11, -12, -13, -14, -86, -16,
	-17, -18, -19, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31,
	-32, -33, -34, -35, -36, -37, -38, -39, -7, 166, 0, 0, 0, 0, 0, -8, -9, -10,
	-11, -12, -13, -14, -86, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25,
	-26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -39, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 282, 167, 115, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 115, 115, 328, 329, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0, 0, 0, 351, 0, 0,
	200, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0, 0, 115, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 166, 0, 0, 115, 0, 0, 115, 0, 115, 0,
	115, 0, 115, 115, 0, 0, 0, 0, 0, 0, 351, 167, -1, -1, -1, -1, -1, -1, -1, -1,
	0, -1, 0, -1, -191, -1, -1, 0, 0, -1, -1, -1, -1, 0, 0, 0, 0, -1, -192, -1,
	0, 0, -193, 0, -1, -1, -1, -1, 0, 0, -1, -1, 0, 0, 0, -1, -1, 0, 131, -1, 0,
	0, 0, 41, 0, 0, 0, 0, 115, 0, 0, 0, 115, 131, 0, 115, 0, 115, 131, 0, 0, 0,
	0, 375, 0, 0, 0, 0, 0, 131, 0, 401, 131, -1, 0, 0, 0, 0, 0, 167, 0, 95, 131,
	0, 0, 0, 0, 0, 131, 0, 131, 131, 0, 0, 131, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 0, 351, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 41, 131, 0, 0, 0, 0, 0, 131, 0, 131, 351, 131, 0, 131, 184, 41, 0, 131, 0,
	0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 163, 41, 0, 0, 0, 0, 131, 0, 0,
	131, 0, 131, 0, 131, 0, 131, 131, 41, 0, 41, 41, 128, 0, 41, 0, 375, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 128, 0, 0, 248, 249, 0, 0, 0, 0, 41,
	163, 128, 0, 259, 128, 0, 0, 0, 0, 41, 0, 0, 0, 0, 128, 41, 0, 0, 0, 0, 128,
	41, 128, 128, 0, 41, 128, 163, 0, 0, 131, 0, 0, 0, 131, 0, 0, 131, 0, 131, 0,
	163, 163, 0, 0, 0, 0, 41, 0, 0, 41, 0, 41, 128, 41, 0, 41, 41, 0, 0, 0, 0, 0,
	128, 41, 0, 0, 0, 0, 128, 0, 269, 0, 276, 0, 128, 0, 163, 332, 128, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 129, 0, 0, 0, 0, 131, 0, 128, 0, 0,
	128, 0, 128, 0, 128, 129, 128, 128, 0, 0, 129, 163, 0, 0, 0, 0, 0, 0, 41, 0,
	0, 129, 41, 0, 129, 41, 0, 41, 0, 0, 0, 163, 0, 0, 129, 0, 0, 0, 0, 0, 129,
	41, 129, 129, 130, 0, 129, 0, 0, 39, 408, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0,
	0, 0, 130, 0, 0, 0, 462, 463, 438, 439, 128, 129, 0, 130, 128, 0, 130, 128,
	0, 128, 422, 129, 0, 0, 0, 41, 130, 129, 0, 129, 0, 129, 130, 129, 130, 130,
	492, 129, 130, 0, 0, 0, 0, 0, 0, 441, 442, 0, 0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 129, 0, 0, 129, 0, 129, 130, 129, 0, 129, 129, 0, 0, 0, 0, 39, 130, 0,
	450, 0, 128, 482, 130, 0, 130, 0, 130, 0, 130, 0, 39, 0, 130, 117, 0, 39, 0,
	0, 0, 163, 40, 0, 408, 0, 0, 0, 39, 0, 170, 39, 502, 0, 505, 180, 130, 0, 0,
	130, 0, 130, 163, 130, 0, 130, 130, 39, 442, 39, 39, 0, 0, 39, 0, 520, 0,
	129, 0, 0, 0, 129, 0, 0, 129, 218, 129, 220, 221, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 39, 0, 0, 0, 0, 0, 0, 0, 0, 0, 39, 0, 0, 0, 0, 0, 39, 0, 247, 0, 0,
	0, 39, 0, 0, 0, 39, 0, 0, 132, 0, 130, 0, 0, 262, 130, 0, 0, 130, 0, 130, 0,
	0, 0, 132, 0, 129, 0, 39, 132, 0, 39, 0, 39, 0, 39, 0, 39, 39, 0, 132, 0, 0,
	132, 0, 39, 290, 0, 0, 293, 0, 295, 0, 297, 0, 299, 300, 0, 0, 132, 0, 132,
	132, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 39, 0, 0, 0, 39, 132,
	0, 39, 0, 39, 0, 132, 0, 0, 0, 132, 0, 0, 356, 0, 0, 0, 359, 39, 0, 362, 0,
	364, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 132, 0, 132, 0, 132, 0, 132, 132,
	0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, 39,
	-1, -1, -1, -1, 0, 0, 0, -1, -1, 0, 127, 0, 0, 0, -1, -192, -1, 420, 0, -1,
	0, -1, -1, 0, -1, 127, 0, -1, -1, 0, 127, 0, -1, -1, 0, 0, -1, 0, 120, 0, 0,
	127, 132, 0, 127, 0, 132, 0, 0, 132, 0, 132, 0, 120, 211, 0, 0, 0, 120, 0,
	127, 0, 127, 127, 0, 40, 127, 0, 0, 195, -1, 0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 0, 120, 120, 0, 127, 120, 0, 0, 0, 0, 0, 0, 0, 124,
	127, 0, 0, 0, 0, 0, 127, 0, 132, 0, 0, 0, 127, 0, 124, 0, 127, 0, 120, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 201, 0, 124, 0, 0, 204, 120, 0, 0, 0, 127, 0, 120,
	127, 0, 127, 279, 127, 0, 127, 127, 124, 0, 124, 124, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 0, 0, 120, 0, 120, 0, 120, 0, 120, 120, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0, 0, 0, 0, 124, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 204, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0, 127, 0, 127, 125, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 124, 0, 124, 0, 124, 125, 124, 124, 120, 0, 125, 0, 120,
	126, 0, 120, 0, 120, 0, 0, 0, 125, 0, 0, 205, 0, 0, 0, 126, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 125, 0, 125, 125, 126, 0, 125, 206, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 126, 126, 0, 0, 126, 0, 0, 124, 125, 0, 0,
	124, 120, 0, 124, 0, 124, 0, 205, 0, 0, 0, 0, 0, 125, 0, 0, 0, 0, 0, 125,
	126, 0, 0, 205, 0, 0, 0, 0, 0, 122, 206, 0, 0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	126, 123, 122, 125, 206, 0, 125, 181, 125, 0, 125, 0, 125, 125, 0, 0, 123, 0,
	197, 0, 0, 123, 0, 124, 0, 0, 126, 0, 0, 126, 0, 126, 123, 126, 0, 126, 126,
	122, 0, 122, 122, 119, 0, 122, 0, 0, 0, 0, 0, 0, 0, 123, 0, 123, 123, 0, 119,
	123, 0, 0, 0, 119, 0, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 125, 0, 123, 125, 122, 125, 0, 0, 0, 119, 122, 119, 119, 0, 0, 119, 0,
	0, 123, 126, 0, 0, 0, 126, 123, 0, 126, 0, 126, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 122, 0, 122, 119, 122, 0, 122, 122, 0, 0, 0, 123, 0, 0, 123, 0, 123, 0,
	123, 119, 123, 123, 0, 0, 0, 119, 125, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126, 0, 119, 0, 0, 119, 0, 119, 0, 119, 0, 119,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 122, 0, 0, 122, 0, 122, 0,
	0, 0, 0, 123, 0, 0, 0, 123, 0, 0, 123, 0, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119, 0, 0, 0,
	119, 0, 0, 119, 0, 119, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
}

var tmCheck = []int16{
	1, 235, 8, 4, 10, 188, 28, 29, 74, 15, 16, 77, 13, 19, 18, 21, 22, 23, 24,
	23, 18, 15, 26, 235, 10, 23, 38, 21, 18, 15, 36, 37, 0, 23, 40, 41, 372, 23,
	24, 40, 46, 9, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 309,
	80, 15, 10, 17, 263, 264, 94, 15, 96, 17, 18, 88, 89, 90, 80, 235, 24, 2, 3,
	10, 432, 309, 99, 100, 15, 102, 103, 18, 235, 106, 107, 108, 109, 24, 42, 18,
	10, 100, 1, 10, 23, 15, 119, 26, 15, 122, 458, 38, 460, 23, 24, 42, 23, 24,
	64, 132, 56, 134, 43, 147, 17, 138, 47, 140, 141, 88, 11, 144, 13, 14, 27,
	381, 72, 10, 102, 20, 49, 489, 15, 18, 103, 340, 159, 342, 23, 108, 23, 24,
	235, 309, 35, 154, 155, 381, 171, 172, 173, 80, 175, 17, 18, 21, 309, 76,
	181, 182, 79, 188, 287, 27, 187, 188, 189, 190, 191, 138, 193, 140, 141, 11,
	197, 144, 12, 12, 434, 316, 10, 17, 20, 18, 10, 159, 67, 210, 23, 212, 213,
	27, 73, 216, 24, 80, 219, 35, 24, 222, 434, 224, 171, 226, 34, 228, 229, 99,
	34, 10, 102, 10, 235, 236, 237, 381, 309, 24, 187, 51, 345, 18, 11, 24, 193,
	24, 23, 34, 381, 238, 253, 20, 255, 34, 257, 34, 263, 391, 261, 71, 263, 264,
	265, 307, 107, 80, 35, 270, 271, 15, 219, 17, 11, 222, 50, 224, 18, 226, 150,
	228, 229, 20, 399, 237, 287, 18, 107, 159, 434, 65, 23, 294, 122, 235, 308,
	298, 35, 15, 301, 17, 303, 434, 78, 80, 307, 18, 309, 48, 381, 113, 313, 52,
	53, 54, 317, 56, 57, 58, 59, 10, 61, 62, 325, 69, 15, 66, 15, 68, 17, 70,
	333, 72, 18, 340, 75, 342, 470, 340, 210, 342, 366, 367, 345, 346, 0, 294,
	349, 236, 432, 298, 18, 181, 301, 9, 303, 23, 21, 0, 162, 10, 363, 434, 365,
	366, 367, 237, 9, 197, 382, 474, 18, 325, 456, 24, 458, 23, 460, 10, 381,
	251, 252, 10, 15, 17, 428, 388, 15, 390, 391, 392, 495, 10, 10, 27, 10, 398,
	15, 400, 482, 15, 109, 485, 10, 487, 18, 489, 24, 15, 17, 23, 253, 20, 255,
	17, 363, 287, 235, 10, 502, 422, 18, 505, 15, 27, 508, 428, 452, 15, 317, 17,
	10, 434, 253, 10, 255, 15, 520, 10, 15, 381, 10, 10, 15, 446, 447, 15, 15,
	10, 236, 452, 2, 10, 15, 325, 10, 8, 15, 10, 212, 15, 10, 265, 15, 16, 236,
	15, 19, 470, 21, 22, 23, 474, 10, 345, 18, 10, 18, 15, 100, 23, 15, 23, 12,
	36, 37, 15, 12, 40, 41, 15, 366, 367, 495, 46, 257, 48, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 8, 317, 10, 133, 154, 308, 18, 190, 16, 24,
	2, 19, 15, 21, 22, 23, 24, 317, 98, 38, 18, 12, 309, 90, 261, 18, 15, 73, 36,
	37, 18, 15, 40, 41, 381, 20, 18, 24, 46, 81, 48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 8, 474, 10, 27, 96, 27, 382, 15, 16, 3, 46, 18, 15,
	21, 22, 23, 24, 15, 23, 12, 15, 18, 495, 15, 15, 15, 0, 15, 36, 37, 15, 15,
	40, 41, 398, 24, 0, 392, 46, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 8, 434, 10, 216, 3, 82, 0, 82, 16, 285, 100, 455, 307, 21, 22,
	23, 24, 346, 317, 236, 391, 236, 316, 109, 181, 316, 190, 190, 36, 37, 90,
	-1, 40, 41, 159, -1, -1, 45, 46, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 8, -1, 10, -1, -1, -1, -1, 15, 16, -1, -1, -1, -1, 21, 22,
	23, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, 37, -1, -1, 40, 41,
	-1, -1, -1, -1, 46, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 8, -1, 10, -1, -1, -1, -1, 15, 16, -1, -1, -1, -1, 21, 22, 23, 24, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, 37, -1, -1, -1, 41, -1, -1, -1,
	-1, 46, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1,
	-1, 3, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21,
	-1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40,
	41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, 0, -1, -1, 3, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 21, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 0, -1, -1, 3, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1, 3, -1, -1, -1, -1, 8, 9,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, 25, 26, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1,
	48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, 3, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, 19, 20, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, 43, -1, -1,
	-1, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0, -1, -1, -1,
	-1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1,
	-1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1,
	-1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0,
	81, -1, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	21, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 0, 81, -1, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 21, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 0, 81, -1, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 21, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1, -1, -1, -1, -1, -1, 8, 9, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, 25, 26, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0, 81, -1, -1, -1, -1, -1,
	-1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, 25, 26,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1,
	-1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1,
	-1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1,
	-1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41,
	-1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 0, -1, -1, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 21, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 38, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 88, -1, -1, -1, -1, -1, -1, 87, 88, -1, -1, -1, 92, -1,
	94, 103, 96, -1, -1, -1, 108, -1, -1, 103, -1, -1, -1, -1, 108, -1, -1, 119,
	-1, -1, 122, -1, -1, -1, -1, 119, 120, -1, 122, -1, -1, -1, -1, -1, -1, -1,
	138, -1, 140, 141, -1, -1, 144, -1, 138, -1, 140, 141, 142, -1, 144, 145, -1,
	147, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 171, -1, -1,
	-1, -1, -1, -1, -1, 171, -1, 181, -1, -1, -1, -1, -1, 187, -1, 181, -1, -1,
	-1, 193, -1, 187, -1, 197, -1, -1, -1, 193, -1, 195, -1, 197, -1, -1, -1,
	201, 18, -1, -1, -1, -1, 23, -1, -1, 26, 219, -1, -1, 222, -1, 224, -1, 226,
	219, 228, 229, 222, -1, 224, 41, 226, -1, 228, 229, 230, -1, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, 2, 3, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 279, -1, -1, -1, 19, 20, -1, 294, -1, -1, -1, 298, -1, -1,
	301, 294, 303, -1, -1, 298, -1, -1, 301, -1, 303, 40, 41, -1, 43, -1, -1, -1,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0, -1, -1, -1, -1,
	-1, -1, -1, 8, 9, -1, 363, -1, -1, -1, -1, -1, -1, -1, 363, -1, -1, -1, -1,
	-1, 25, 26, -1, -1, -1, 374, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1,
	-1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 435, -1, -1, -1, -1, -1, 441, -1, -1,
	-1, -1, -1, -1, 456, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 482, -1, 484, 485, -1, 487, 0,
	-1, -1, -1, -1, -1, -1, -1, 8, 9, -1, -1, 500, -1, 502, -1, 504, 505, -1,
	507, 508, -1, -1, -1, -1, 25, 26, 515, -1, -1, 518, -1, 520, -1, 522, -1, -1,
	-1, -1, 527, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 0, -1, -1, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1, -1, -1, -1, -1, -1, 8, 9,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1,
	48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 90, -1, -1, -1,
	-1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, 107, -1, -1, -1, -1, -1,
	-1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1,
	-1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	0, -1, -1, -1, -1, 175, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	190, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 40, 41, -1, -1, -1, -1, 216, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 0, -1, 253, -1, 255, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 270, 271, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 287, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1, -1, -1, -1, -1, -1, 8, 9, -1,
	-1, -1, 345, 346, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 41, 42, 43, 44, 45, 46,
	47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 2, 3, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, 474, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, 43, -1, 495,
	-1, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 88, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 102, 103, -1, -1, -1, -1, 108, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 119, -1, -1, 122, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 132, -1, -1, -1, -1, -1, 138, -1, 140, 141, -1, -1, 144, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 159, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 171, -1, -1, 102, -1, -1, -1, -1, -1, -1, 181, -1, -1,
	-1, -1, -1, 187, 188, 189, -1, 191, -1, 193, -1, -1, -1, 197, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 210, -1, -1, -1, -1, -1, -1, -1, -1, 219, -1,
	-1, 222, -1, 224, -1, 226, -1, 228, 229, -1, 159, -1, -1, -1, -1, -1, 237,
	-1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, -1, 9, -1, 11, 12, 13, 14, -1, -1, 17,
	18, 19, 20, -1, 263, 264, 265, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
	-1, -1, 38, 39, -1, 210, 42, 43, 44, -1, -1, 47, -1, -1, -1, -1, -1, 294, -1,
	-1, -1, 298, -1, -1, 301, -1, 303, -1, -1, -1, -1, -1, 237, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 81, 251, 252, 325, -1, -1, 12, -1, -1, -1,
	-1, -1, -1, -1, -1, 21, -1, -1, 340, -1, 342, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 36, 37, -1, -1, -1, 41, -1, 287, -1, -1, 46, 363, 48, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 0, 325, -1, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 345, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 21, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 36, 37, -1, -1, -1, 41, -1, -1, -1, -1, 46, -1, 48,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0, -1, -1, -1, -1, -1, -1,
	-1, -1, 9, -1, 474, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 495, -1, -1, -1, -1, -1, -1, -1, 40, 41, 2, 3, 44,
	-1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, -1, 41, -1,
	43, -1, -1, -1, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 10,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, 26, -1, -1, -1,
	-1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, 48,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0, -1, -1, -1, -1, -1, -1,
	-1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, 40, 41, -1, -1, -1,
	-1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 8, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1, 48,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0, -1, -1, -1, -1, -1, -1,
	-1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1,
	-1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 21, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, 41, -1,
	-1, -1, -1, 46, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 27,
	-1, 29, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1,
	-1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 17, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1,
	-1, -1, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1,
	-1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 8,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, 41, -1, -1, -1, -1, -1,
	-1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 29, -1, -1, -1, 33,
	-1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 37, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1,
	48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 40, 41, 2, -1, -1, -1,
	-1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, -1, 41, -1, -1,
	-1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 32, -1,
	-1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 32, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1,
	-1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 0, 1,
	2, 3, 4, 5, 6, 7, -1, 9, -1, 11, 12, 13, 14, -1, -1, 17, 18, 19, 20, -1, -1,
	-1, -1, 25, 26, 27, 28, 29, 30, -1, 32, 33, 34, 35, -1, -1, 38, 39, -1, -1,
	42, 43, 44, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1,
	-1, 81, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 39, -1, 41, -1,
	-1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 24,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1,
	-1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 15, -1,
	-1, -1, -1, -1, -1, -1, -1, 102, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4,
	-1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 41, 159, -1, -1, -1, -1, -1, 48, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 88, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	100, 210, 102, 103, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 122, -1, -1, -1, -1, -1, 237, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 138, -1, 140, 141, 251, 252, 144, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 159, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 171, -1, -1,
	-1, -1, -1, -1, 287, -1, -1, 181, -1, -1, -1, -1, -1, 187, -1, -1, -1, -1,
	-1, 193, -1, -1, -1, 197, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 325, -1, -1, 219, -1, -1, 222, -1, 224, -1, 226, -1, 228,
	229, -1, -1, -1, -1, -1, -1, 345, 237, 0, 1, 2, 3, 4, 5, 6, 7, -1, 9, -1, 11,
	12, 13, 14, -1, -1, 17, 18, 19, 20, -1, -1, -1, -1, 25, 26, 27, -1, -1, 30,
	-1, 32, 33, 34, 35, -1, -1, 38, 39, -1, -1, -1, 43, 44, -1, 88, 47, -1, -1,
	-1, 1, -1, -1, -1, -1, 294, -1, -1, -1, 298, 103, -1, 301, -1, 303, 108, -1,
	-1, -1, -1, 309, -1, -1, -1, -1, -1, 119, -1, 317, 122, 81, -1, -1, -1, -1,
	-1, 325, -1, 39, 132, -1, -1, -1, -1, -1, 138, -1, 140, 141, -1, -1, 144, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 102, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 363, -1, 474, -1, 171, -1, -1, -1, -1, -1, -1, -1, -1, 88, 181, -1,
	-1, -1, -1, -1, 187, -1, 189, 495, 191, -1, 193, 109, 103, -1, 197, -1, -1,
	108, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 119, -1, 159, 122, -1, -1, -1,
	-1, 219, -1, -1, 222, -1, 224, -1, 226, -1, 228, 229, 138, -1, 140, 141, 88,
	-1, 144, -1, 434, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 103, -1, -1, -1,
	-1, 108, -1, -1, 172, 173, -1, -1, -1, -1, 171, 210, 119, -1, 182, 122, -1,
	-1, -1, -1, 181, -1, -1, -1, -1, 132, 187, -1, -1, -1, -1, 138, 193, 140,
	141, -1, 197, 144, 237, -1, -1, 294, -1, -1, -1, 298, -1, -1, 301, -1, 303,
	-1, 251, 252, -1, -1, -1, -1, 219, -1, -1, 222, -1, 224, 171, 226, -1, 228,
	229, -1, -1, -1, -1, -1, 181, 236, -1, -1, -1, -1, 187, -1, 189, -1, 191, -1,
	193, -1, 287, 257, 197, -1, -1, 261, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 88, -1, -1, -1, -1, 363, -1, 219, -1, -1, 222, -1, 224, -1, 226, 103,
	228, 229, -1, -1, 108, 325, -1, -1, -1, -1, -1, -1, 294, -1, -1, 119, 298,
	-1, 122, 301, -1, 303, -1, -1, -1, 345, -1, -1, 132, -1, -1, -1, -1, -1, 138,
	317, 140, 141, 88, -1, 144, -1, -1, 1, 333, -1, -1, -1, -1, -1, -1, -1, -1,
	103, -1, -1, -1, -1, 108, -1, -1, -1, 436, 437, 384, 385, 294, 171, -1, 119,
	298, -1, 122, 301, -1, 303, 365, 181, -1, -1, -1, 363, 132, 187, -1, 189, -1,
	191, 138, 193, 140, 141, 466, 197, 144, -1, -1, -1, -1, -1, -1, 390, 391, -1,
	-1, -1, -1, -1, -1, 398, -1, -1, -1, -1, -1, 219, -1, -1, 222, -1, 224, 171,
	226, -1, 228, 229, -1, -1, -1, -1, 88, 181, -1, 422, -1, 363, 456, 187, -1,
	189, -1, 191, -1, 193, -1, 103, -1, 197, 88, -1, 108, -1, -1, -1, 474, 1, -1,
	446, -1, -1, -1, 119, -1, 103, 122, 485, -1, 487, 108, 219, -1, -1, 222, -1,
	224, 495, 226, -1, 228, 229, 138, 470, 140, 141, -1, -1, 144, -1, 508, -1,
	294, -1, -1, -1, 298, -1, -1, 301, 138, 303, 140, 141, -1, -1, 144, -1, -1,
	-1, -1, -1, -1, -1, -1, 171, -1, -1, -1, -1, -1, -1, -1, -1, -1, 181, -1, -1,
	-1, -1, -1, 187, -1, 171, -1, -1, -1, 193, -1, -1, -1, 197, -1, -1, 88, -1,
	294, -1, -1, 187, 298, -1, -1, 301, -1, 303, -1, -1, -1, 103, -1, 363, -1,
	219, 108, -1, 222, -1, 224, -1, 226, -1, 228, 229, -1, 119, -1, -1, 122, -1,
	236, 219, -1, -1, 222, -1, 224, -1, 226, -1, 228, 229, -1, -1, 138, -1, 140,
	141, -1, -1, 144, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	363, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 171, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 181, 294, -1, -1, -1, 298, 187, -1, 301, -1, 303, -1, 193, -1,
	-1, -1, 197, -1, -1, 294, -1, -1, -1, 298, 317, -1, 301, -1, 303, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 219, -1, -1, 222, -1, 224, -1, 226, -1, 228, 229, -1,
	-1, -1, -1, -1, -1, 236, -1, -1, -1, -1, -1, 1, 2, 3, 4, 5, 6, 7, -1, -1,
	363, 11, 12, 13, 14, -1, -1, -1, 18, 19, -1, 88, -1, -1, -1, 25, 26, 27, 363,
	-1, 30, -1, 32, 33, -1, 35, 103, -1, 38, 39, -1, 108, -1, 43, 44, -1, -1, 47,
	-1, 88, -1, -1, 119, 294, -1, 122, -1, 298, -1, -1, 301, -1, 303, -1, 103,
	132, -1, -1, -1, 108, -1, 138, -1, 140, 141, -1, 317, 144, -1, -1, 119, 81,
	-1, 122, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 138, -1,
	140, 141, -1, 171, 144, -1, -1, -1, -1, -1, -1, -1, 88, 181, -1, -1, -1, -1,
	-1, 187, -1, 363, -1, -1, -1, 193, -1, 103, -1, 197, -1, 171, 108, -1, -1,
	-1, -1, -1, -1, -1, -1, 181, -1, 119, -1, -1, 122, 187, -1, -1, -1, 219, -1,
	193, 222, -1, 224, 197, 226, -1, 228, 229, 138, -1, 140, 141, -1, -1, 144,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 219, -1, -1, 222, -1, 224, -1, 226,
	-1, 228, 229, -1, -1, -1, -1, -1, 171, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	181, -1, -1, -1, -1, -1, 187, -1, -1, -1, -1, -1, 193, -1, -1, -1, 197, -1,
	-1, -1, -1, 294, -1, -1, -1, 298, -1, -1, 301, -1, 303, 88, -1, -1, -1, -1,
	-1, -1, 219, -1, -1, 222, -1, 224, -1, 226, 103, 228, 229, 294, -1, 108, -1,
	298, 88, -1, 301, -1, 303, -1, -1, -1, 119, -1, -1, 122, -1, -1, -1, 103, -1,
	-1, -1, -1, 108, -1, -1, -1, -1, -1, -1, 138, -1, 140, 141, 119, -1, 144,
	122, -1, 363, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 138, -1,
	140, 141, -1, -1, 144, -1, -1, 294, 171, -1, -1, 298, 363, -1, 301, -1, 303,
	-1, 181, -1, -1, -1, -1, -1, 187, -1, -1, -1, -1, -1, 193, 171, -1, -1, 197,
	-1, -1, -1, -1, -1, 88, 181, -1, -1, -1, -1, -1, 187, -1, -1, -1, -1, -1,
	193, 88, 103, 219, 197, -1, 222, 108, 224, -1, 226, -1, 228, 229, -1, -1,
	103, -1, 119, -1, -1, 108, -1, 363, -1, -1, 219, -1, -1, 222, -1, 224, 119,
	226, -1, 228, 229, 138, -1, 140, 141, 88, -1, 144, -1, -1, -1, -1, -1, -1,
	-1, 138, -1, 140, 141, -1, 103, 144, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1,
	-1, -1, 171, -1, -1, -1, -1, -1, -1, -1, 294, -1, -1, -1, 298, -1, 171, 301,
	187, 303, -1, -1, -1, 138, 193, 140, 141, -1, -1, 144, -1, -1, 187, 294, -1,
	-1, -1, 298, 193, -1, 301, -1, 303, -1, -1, -1, -1, -1, -1, -1, 219, -1, -1,
	222, -1, 224, 171, 226, -1, 228, 229, -1, -1, -1, 219, -1, -1, 222, -1, 224,
	-1, 226, 187, 228, 229, -1, -1, -1, 193, 363, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 363, -1, 219, -1, -1,
	222, -1, 224, -1, 226, -1, 228, 229, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	294, -1, -1, -1, 298, -1, -1, 301, -1, 303, -1, -1, -1, -1, 294, -1, -1, -1,
	298, -1, -1, 301, -1, 303, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 294,
	-1, -1, -1, 298, -1, -1, 301, -1, 303, -1, -1, -1, -1, -1, 363, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 363, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 363,
}

var tmRuleLen = []int8{
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 5, 5, 4, 5, 4, 4, 3, 2, 0, 2, 0, 6, 3, 3, 3, 4, 3, 3, 1, 2, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 3, 3, 1, 9, 8, 8, 7, 8, 7, 7, 6,
	6, 5, 8, 7, 7, 6, 7, 6, 6, 5, 5, 4, 8, 7, 7, 6, 7, 6, 6, 5, 5, 4, 7, 6, 6, 5,
	6, 5, 5, 4, 4, 3, 3, 1, 1, 1, 5, 4, 4, 3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	8, 7, 7, 6, 7, 6, 6, 5, 7, 6, 6, 5, 6, 5, 5, 4, 6, 5, 1, 1, 1, 1, 1, 1, 7, 5,
	6, 4, 4, 4, 4, 5, 5, 6, 4, 4, 5, 3, 1, 3, 1, 2, 1, 1, 2, 1, 3, 4, 3, 3, 2, 3,
	2, 2, 1, 3, 2, 2, 1, 2, 1, 1, 0, 1, 3, 3, 3, 5, 4, 3, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 2, 1, 2, 1, 2, 1, 3, 3, 1, 2, 1, 3, 3, 2, 1, 3, 5, 5,
	2, 2, 4, 1, 4, 2, 1, 3, 2, 1, 3, 3, 2, 1, 1, 4, 2, 2, 3, 1, 3, 1, 4, 2, 1, 3,
	3, 1, 1, 0, 3, 1, 2, 2, 1, 1, 1, 1, 1, 2, 3, 3, 1, 3, 3, 1, 1, 4, 3, 3, 2, 1,
	3, 1, 1, 0,
}

var tmRuleSymbol = []int32{
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 85, 86, 86,
	87, 87, 87, 88, 89, 90, 91, 91, 91, 91, 91, 91, 91, 91, 92, 92, 93, 93, 94,
	94, 95, 96, 97, 97, 98, 99, 100, 100, 101, 102, 102, 103, 103, 103, 103, 104,
	104, 104, 104, 104, 105, 106, 107, 107, 108, 108, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 110, 111, 111, 111, 112, 112, 112, 113, 113, 114,
	115, 116, 116, 117, 117, 117, 118, 118, 118, 118, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 119, 120, 120,
	120, 121, 121, 121, 122, 122, 122, 122, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 124, 124, 125, 125, 126, 126, 127, 127, 128, 128, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 129, 130,
	131, 131, 132, 132, 132, 132, 133, 134, 134, 135, 135, 135, 135, 136, 136,
	136, 136, 136, 137, 137, 138, 139, 139, 140, 141, 141, 142, 142, 142, 143,
	143, 144, 144, 144, 145, 146, 146, 146, 146, 146, 146, 146, 146, 147, 148,
	148, 148, 148, 149, 149, 149, 150, 150, 151, 152, 152, 152, 153, 153, 154,
	155, 155, 155, 156, 157, 158, 158, 159, 159, 160, 160, 160, 160, 161, 161,
	162, 162, 163, 163, 163, 163, 164, 164, 164, 165, 165, 165, 165, 165, 165,
	165, 166, 166, 167, 167,
}

var tmRuleType = [...]NodeType{
	Identifier,           // identifier : ID
	Identifier,           // identifier : 'brackets'
	Identifier,           // identifier : 'inline'
	Identifier,           // identifier : 'prec'
	Identifier,           // identifier : 'shift'
	Identifier,           // identifier : 'input'
	Identifier,           // identifier : 'left'
	Identifier,           // identifier : 'right'
	Identifier,           // identifier : 'nonassoc'
	Identifier,           // identifier : 'generate'
	Identifier,           // identifier : 'assert'
	Identifier,           // identifier : 'empty'
	Identifier,           // identifier : 'nonempty'
	Identifier,           // identifier : 'global'
	Identifier,           // identifier : 'explicit'
	Identifier,           // identifier : 'lookahead'
	Identifier,           // identifier : 'param'
	Identifier,           // identifier : 'flag'
	Identifier,           // identifier : 'no-eoi'
	Identifier,           // identifier : 's'
	Identifier,           // identifier : 'x'
	Identifier,           // identifier : 'expect'
	Identifier,           // identifier : 'expect-rr'
	Identifier,           // identifier : 'class'
	Identifier,           // identifier : 'interface'
	Identifier,           // identifier : 'space'
	Identifier,           // identifier : 'extend'
	Identifier,           // identifier : 'inject'
	Identifier,           // identifier : 'layout'
	Identifier,           // identifier : 'language'
	Identifier,           // identifier : 'lalr'
	Identifier,           // identifier : 'lexer'
	Identifier,           // identifier : 'parser'
	Identifier,           // identifier_Keywords : ID
	Identifier,           // identifier_Keywords : 'brackets'
	Identifier,           // identifier_Keywords : 'inline'
	Identifier,           // identifier_Keywords : 'prec'
	Identifier,           // identifier_Keywords : 'shift'
	Identifier,           // identifier_Keywords : 'input'
	Identifier,           // identifier_Keywords : 'left'
	Identifier,           // identifier_Keywords : 'right'
	Identifier,           // identifier_Keywords : 'nonassoc'
	Identifier,           // identifier_Keywords : 'generate'
	Identifier,           // identifier_Keywords : 'assert'
	Identifier,           // identifier_Keywords : 'empty'
	Identifier,           // identifier_Keywords : 'nonempty'
	Identifier,           // identifier_Keywords : 'global'
	Identifier,           // identifier_Keywords : 'explicit'
	Identifier,           // identifier_Keywords : 'lookahead'
	Identifier,           // identifier_Keywords : 'param'
	Identifier,           // identifier_Keywords : 'flag'
	Identifier,           // identifier_Keywords : 'no-eoi'
	Identifier,           // identifier_Keywords : 's'
	Identifier,           // identifier_Keywords : 'x'
	Identifier,           // identifier_Keywords : 'expect'
	Identifier,           // identifier_Keywords : 'expect-rr'
	Identifier,           // identifier_Keywords : 'class'
	Identifier,           // identifier_Keywords : 'interface'
	Identifier,           // identifier_Keywords : 'space'
	Identifier,           // identifier_Keywords : 'extend'
	Identifier,           // identifier_Keywords : 'inject'
	Identifier,           // identifier_Keywords : 'layout'
	Identifier,           // identifier_Keywords : 'language'
	Identifier,           // identifier_Keywords : 'lalr'
	Identifier,           // identifier_Keywords : 'lexer'
	Identifier,           // identifier_Keywords : 'parser'
	Identifier,           // identifier_Keywords : 'true'
	Identifier,           // identifier_Keywords : 'false'
	Identifier,           // identifier_Keywords : 'separator'
	Identifier,           // identifier_Keywords : 'as'
	Identifier,           // identifier_Keywords : 'import'
	Identifier,           // identifier_Keywords : 'set'
	IntegerLiteral,       // integer_literal : icon
	StringLiteral,        // string_literal : scon
	BooleanLiteral,       // boolean_literal : 'true'
	BooleanLiteral,       // boolean_literal : 'false'
	0,                    // literal : string_literal
	0,                    // literal : integer_literal
	0,                    // literal : boolean_literal
	Pattern,              // pattern : regexp
	Command,              // command : code
	SyntaxProblem,        // syntax_problem : error
	0,                    // file : header import__optlist option_optlist syntax_problem lexer_section parser_section
	0,                    // file : header import__optlist option_optlist syntax_problem lexer_section
	0,                    // file : header import__optlist option_optlist syntax_problem parser_section
	0,                    // file : header import__optlist option_optlist syntax_problem
	0,                    // file : header import__optlist option_optlist lexer_section parser_section
	0,                    // file : header import__optlist option_optlist lexer_section
	0,                    // file : header import__optlist option_optlist parser_section
	0,                    // file : header import__optlist option_optlist
	0,                    // import__optlist : import__optlist import_
	0,                    // import__optlist :
	0,                    // option_optlist : option_optlist option
	0,                    // option_optlist :
	Header,               // header : 'language' identifier_Keywords '(' identifier_Keywords ')' ';'
	Header,               // header : 'language' identifier_Keywords ';'
	LexerSection,         // lexer_section : '::' .recoveryScope 'lexer' lexer_parts
	ParserSection,        // parser_section : '::' .recoveryScope 'parser' grammar_parts
	Import,               // import_ : 'import' identifier string_literal ';'
	Import,               // import_ : 'import' string_literal ';'
	Option,               // option : identifier '=' expression
	Symref,               // symref : identifier
	Symref,               // symref_Args : identifier args
	Symref,               // symref_Args : identifier
	RawType,              // rawType : code
	0,                    // lexer_parts : lexer_part
	0,                    // lexer_parts : lexer_parts lexer_part_OrSyntaxError
	0,                    // lexer_part : named_pattern
	0,                    // lexer_part : lexeme
	0,                    // lexer_part : lexer_directive
	0,                    // lexer_part : start_conditions_scope
	0,                    // lexer_part_OrSyntaxError : named_pattern
	0,                    // lexer_part_OrSyntaxError : lexeme
	0,                    // lexer_part_OrSyntaxError : lexer_directive
	0,                    // lexer_part_OrSyntaxError : start_conditions_scope
	0,                    // lexer_part_OrSyntaxError : syntax_problem
	NamedPattern,         // named_pattern : identifier '=' pattern
	StartConditionsScope, // start_conditions_scope : start_conditions '{' .recoveryScope lexer_parts '}'
	StartConditions,      // start_conditions : '<' '*' '>'
	StartConditions,      // start_conditions : '<' stateref_list_Comma_separated '>'
	0,                    // stateref_list_Comma_separated : stateref_list_Comma_separated ',' stateref
	0,                    // stateref_list_Comma_separated : stateref
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' pattern integer_literal command
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' pattern integer_literal
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' pattern lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' pattern command
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' pattern
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':' lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt reportClause ':'
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' pattern command
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' pattern
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier rawTypeopt ':'
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' pattern integer_literal command
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' pattern integer_literal
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' pattern lexeme_attrs
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' pattern command
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' pattern
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':' lexeme_attrs
	Lexeme,               // lexeme : identifier rawTypeopt reportClause ':'
	Lexeme,               // lexeme : identifier rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : identifier rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : identifier rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : identifier rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : identifier rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : identifier rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : identifier rawTypeopt ':' pattern command
	Lexeme,               // lexeme : identifier rawTypeopt ':' pattern
	Lexeme,               // lexeme : identifier rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : identifier rawTypeopt ':'
	LexemeAttrs,          // lexeme_attrs : '(' lexeme_attribute ')'
	LexemeAttribute,      // lexeme_attribute : 'class'
	LexemeAttribute,      // lexeme_attribute : 'space'
	LexemeAttribute,      // lexeme_attribute : 'layout'
	DirectiveBrackets,    // lexer_directive : '%' 'brackets' symref symref ';'
	InclusiveStartConds,  // lexer_directive : '%' 's' lexer_state_list_Comma_separated ';'
	ExclusiveStartConds,  // lexer_directive : '%' 'x' lexer_state_list_Comma_separated ';'
	0,                    // lexer_state_list_Comma_separated : lexer_state_list_Comma_separated ',' lexer_state
	0,                    // lexer_state_list_Comma_separated : lexer_state
	Stateref,             // stateref : identifier
	LexerState,           // lexer_state : identifier
	0,                    // grammar_parts : grammar_part
	0,                    // grammar_parts : grammar_parts grammar_part_OrSyntaxError
	0,                    // grammar_part : nonterm
	0,                    // grammar_part : template_param
	0,                    // grammar_part : directive
	0,                    // grammar_part_OrSyntaxError : nonterm
	0,                    // grammar_part_OrSyntaxError : template_param
	0,                    // grammar_part_OrSyntaxError : directive
	0,                    // grammar_part_OrSyntaxError : syntax_problem
	Nonterm,              // nonterm : annotations identifier nonterm_params rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : annotations identifier nonterm_params rawType ':' rules ';'
	Nonterm,              // nonterm : annotations identifier nonterm_params reportClause ':' rules ';'
	Nonterm,              // nonterm : annotations identifier nonterm_params ':' rules ';'
	Nonterm,              // nonterm : annotations identifier rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : annotations identifier rawType ':' rules ';'
	Nonterm,              // nonterm : annotations identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : annotations identifier ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params ':' rules ';'
	Nonterm,              // nonterm : identifier rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier rawType ':' rules ';'
	Nonterm,              // nonterm : identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier ':' rules ';'
	Assoc,                // assoc : 'left'
	Assoc,                // assoc : 'right'
	Assoc,                // assoc : 'nonassoc'
	ParamModifier,        // param_modifier : 'explicit'
	ParamModifier,        // param_modifier : 'global'
	ParamModifier,        // param_modifier : 'lookahead'
	TemplateParam,        // template_param : '%' param_modifier param_type identifier '=' param_value ';'
	TemplateParam,        // template_param : '%' param_modifier param_type identifier ';'
	TemplateParam,        // template_param : '%' param_type identifier '=' param_value ';'
	TemplateParam,        // template_param : '%' param_type identifier ';'
	DirectivePrio,        // directive : '%' assoc references ';'
	DirectiveInput,       // directive : '%' 'input' inputref_list_Comma_separated ';'
	DirectiveInterface,   // directive : '%' 'interface' identifier_list_Comma_separated ';'
	DirectiveAssert,      // directive : '%' 'assert' 'empty' rhsSet ';'
	DirectiveAssert,      // directive : '%' 'assert' 'nonempty' rhsSet ';'
	DirectiveSet,         // directive : '%' 'generate' identifier '=' rhsSet ';'
	DirectiveExpect,      // directive : '%' 'expect' integer_literal ';'
	DirectiveExpectRR,    // directive : '%' 'expect-rr' integer_literal ';'
	DirectiveInject,      // directive : '%' 'inject' symref reportClause ';'
	0,                    // identifier_list_Comma_separated : identifier_list_Comma_separated ',' identifier
	0,                    // identifier_list_Comma_separated : identifier
	0,                    // inputref_list_Comma_separated : inputref_list_Comma_separated ',' inputref
	0,                    // inputref_list_Comma_separated : inputref
	Inputref,             // inputref : symref 'no-eoi'
	Inputref,             // inputref : symref
	0,                    // references : symref
	0,                    // references : references symref
	0,                    // rules : rule0
	0,                    // rules : rules '|' rule0
	Rule,                 // rule0 : predicate rhsParts rhsSuffix reportClause
	Rule,                 // rule0 : predicate rhsParts rhsSuffix
	Rule,                 // rule0 : predicate rhsParts reportClause
	Rule,                 // rule0 : predicate rhsParts
	Rule,                 // rule0 : predicate rhsSuffix reportClause
	Rule,                 // rule0 : predicate rhsSuffix
	Rule,                 // rule0 : predicate reportClause
	Rule,                 // rule0 : predicate
	Rule,                 // rule0 : rhsParts rhsSuffix reportClause
	Rule,                 // rule0 : rhsParts rhsSuffix
	Rule,                 // rule0 : rhsParts reportClause
	Rule,                 // rule0 : rhsParts
	Rule,                 // rule0 : rhsSuffix reportClause
	Rule,                 // rule0 : rhsSuffix
	Rule,                 // rule0 : reportClause
	Rule,                 // rule0 :
	0,                    // rule0 : syntax_problem
	Predicate,            // predicate : '[' predicate_expression ']'
	RhsSuffix,            // rhsSuffix : '%' 'prec' symref
	RhsSuffix,            // rhsSuffix : '%' 'shift' symref
	ReportClause,         // reportClause : '->' identifier '/' identifier_list_Comma_separated reportAs
	ReportClause,         // reportClause : '->' identifier '/' identifier_list_Comma_separated
	ReportClause,         // reportClause : '->' identifier reportAs
	ReportClause,         // reportClause : '->' identifier
	ReportAs,             // reportAs : 'as' identifier
	0,                    // rhsParts : rhsPart
	0,                    // rhsParts : rhsParts rhsPart_OrSyntaxError
	0,                    // rhsPart : rhsAnnotated
	0,                    // rhsPart : command
	0,                    // rhsPart : rhsStateMarker
	0,                    // rhsPart : rhsLookahead
	0,                    // rhsPart_OrSyntaxError : rhsAnnotated
	0,                    // rhsPart_OrSyntaxError : command
	0,                    // rhsPart_OrSyntaxError : rhsStateMarker
	0,                    // rhsPart_OrSyntaxError : rhsLookahead
	0,                    // rhsPart_OrSyntaxError : syntax_problem
	0,                    // lookahead_predicate_list_And_separated : lookahead_predicate_list_And_separated '&' lookahead_predicate
	0,                    // lookahead_predicate_list_And_separated : lookahead_predicate
	RhsLookahead,         // rhsLookahead : '(?=' lookahead_predicate_list_And_separated ')'
	LookaheadPredicate,   // lookahead_predicate : '!' symref
	LookaheadPredicate,   // lookahead_predicate : symref
	StateMarker,          // rhsStateMarker : '.' identifier
	0,                    // rhsAnnotated : rhsAssignment
	RhsAnnotated,         // rhsAnnotated : annotations rhsAssignment
	0,                    // rhsAssignment : rhsOptional
	RhsAssignment,        // rhsAssignment : identifier '=' rhsOptional
	RhsPlusAssignment,    // rhsAssignment : identifier '+=' rhsOptional
	0,                    // rhsOptional : rhsCast
	RhsOptional,          // rhsOptional : rhsCast '?'
	0,                    // rhsCast : rhsPrimary
	RhsCast,              // rhsCast : rhsPrimary 'as' symref_Args
	RhsAsLiteral,         // rhsCast : rhsPrimary 'as' literal
	ListSeparator,        // listSeparator : 'separator' references
	RhsSymbol,            // rhsPrimary : symref_Args
	RhsNested,            // rhsPrimary : '(' .recoveryScope rules ')'
	RhsPlusList,          // rhsPrimary : '(' .recoveryScope rhsParts listSeparator ')' '+'
	RhsStarList,          // rhsPrimary : '(' .recoveryScope rhsParts listSeparator ')' '*'
	RhsPlusQuantifier,    // rhsPrimary : rhsPrimary '+'
	RhsStarQuantifier,    // rhsPrimary : rhsPrimary '*'
	RhsIgnored,           // rhsPrimary : '$' '(' .recoveryScope rules ')'
	0,                    // rhsPrimary : rhsSet
	RhsSet,               // rhsSet : 'set' '(' .recoveryScope setExpression ')'
	SetSymbol,            // setPrimary : identifier symref_Args
	SetSymbol,            // setPrimary : symref_Args
	SetCompound,          // setPrimary : '(' setExpression ')'
	SetComplement,        // setPrimary : '~' setPrimary
	0,                    // setExpression : setPrimary
	SetOr,                // setExpression : setExpression '|' setExpression
	SetAnd,               // setExpression : setExpression '&' setExpression
	0,                    // annotation_list : annotation_list annotation
	0,                    // annotation_list : annotation
	Annotations,          // annotations : annotation_list
	AnnotationImpl,       // annotation : '@' identifier '=' expression
	AnnotationImpl,       // annotation : '@' identifier
	0,                    // annotation : '@' syntax_problem
	0,                    // nonterm_param_list_Comma_separated : nonterm_param_list_Comma_separated ',' nonterm_param
	0,                    // nonterm_param_list_Comma_separated : nonterm_param
	NontermParams,        // nonterm_params : '<' nonterm_param_list_Comma_separated '>'
	0,                    // nonterm_param : param_ref
	InlineParameter,      // nonterm_param : identifier identifier '=' param_value
	InlineParameter,      // nonterm_param : identifier identifier
	ParamRef,             // param_ref : identifier
	SymrefArgs,           // args : '<' argument_list_Comma_separatedopt '>'
	0,                    // argument_list_Comma_separated : argument_list_Comma_separated ',' argument
	0,                    // argument_list_Comma_separated : argument
	0,                    // argument_list_Comma_separatedopt : argument_list_Comma_separated
	0,                    // argument_list_Comma_separatedopt :
	ArgumentVal,          // argument : param_ref ':' param_value
	ArgumentVal,          // argument : param_ref
	ArgumentTrue,         // argument : '+' param_ref
	ArgumentFalse,        // argument : '~' param_ref
	ParamType,            // param_type : 'flag'
	ParamType,            // param_type : 'param'
	0,                    // param_value : literal
	0,                    // param_value : param_ref
	0,                    // predicate_primary : param_ref
	PredicateNot,         // predicate_primary : '!' param_ref
	PredicateEq,          // predicate_primary : param_ref '==' literal
	PredicateNotEq,       // predicate_primary : param_ref '!=' literal
	0,                    // predicate_expression : predicate_primary
	PredicateAnd,         // predicate_expression : predicate_expression '&&' predicate_expression
	PredicateOr,          // predicate_expression : predicate_expression '||' predicate_expression
	0,                    // expression : literal
	0,                    // expression : symref_Args
	Array,                // expression : '[' expression_list_Comma_separated ',' ']'
	Array,                // expression : '[' expression_list_Comma_separated ']'
	Array,                // expression : '[' ',' ']'
	Array,                // expression : '[' ']'
	0,                    // expression : syntax_problem
	0,                    // expression_list_Comma_separated : expression_list_Comma_separated ',' expression
	0,                    // expression_list_Comma_separated : expression
	0,                    // rawTypeopt : rawType
	0,                    // rawTypeopt :
}

// set(follow ERROR) = REM, COLONCOLON, OR, SEMICOLON, DOT, COMMA, RBRACK, LPAREN, LPARENQUESTASSIGN, MINUSGT, RPAREN, RBRACE, LT, DOLLAR, ATSIGN, ERROR, ID, SEPARATOR, SET, ASSERT, BRACKETS, CLASS, EMPTY, EXPECT, EXPECTMINUSRR, EXPLICIT, EXTEND, FLAG, GENERATE, GLOBAL, INJECT, INLINE, INPUT, INTERFACE, LALR, LANGUAGE, LAYOUT, LEFT, LEXER, LOOKAHEAD, NOMINUSEOI, NONASSOC, NONEMPTY, PARAM, PARSER, PREC, RIGHT, CHAR_S, SHIFT, SPACE, CHAR_X, CODE
var afterErr = []token.Type{
	8, 9, 10, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 36, 37, 40, 41, 45, 46, 48,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
}
